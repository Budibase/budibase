name: Budibase Release
concurrency: release

on:
 push:
    branches:
      - master
    paths:
      - '.aws/**'
      - '.github/**'
      - 'charts/**'
      - 'packages/**'
      - 'scripts/**'
      - 'package.json'
      - 'yarn.lock'
      - 'package.json'
      - 'yarn.lock'
 workflow_dispatch:
  inputs:
    versioning:
      type: choice
      description: "Versioning type: patch, minor, major"
      default: patch
      options:
        - patch
        - minor
        - major
      required: true

env:
  # Posthog token used by ui at build time 
  POSTHOG_TOKEN: phc_bIjZL7oh2GEUd2vqvTBH8WvrX0fWTFQMs6H5KQxiUxU
  INTERCOM_TOKEN: ${{ secrets.INTERCOM_TOKEN }}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  PERSONAL_ACCESS_TOKEN : ${{ secrets.PERSONAL_ACCESS_TOKEN }}

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Fail if branch is not master
        if: github.ref != 'refs/heads/master' 
        run: | 
          echo "Ref is not master, you must run this job from master."
          exit 1
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install Pro
        run: yarn install:pro master

      - run: yarn
      - run: yarn bootstrap
      - run: yarn lint
      - run: yarn build
      - run: yarn test

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Publish budibase packages to NPM
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          RELEASE_VERSION_TYPE: ${{ github.event.inputs.versioning }}
        run: |
          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          git config --global user.name "Budibase Release Bot"
          git config --global user.email "<>"
          echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} >> .npmrc
          yarn release

      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

      - name: Build/release Docker images
        run: | 
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
          yarn build
          yarn build:docker
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_API_KEY }}
          BUDIBASE_RELEASE_VERSION: ${{ steps.previoustag.outputs.tag }}
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Tag and release Proxy service docker image
        run: | 
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
          yarn build:docker:proxy:preprod
          docker tag proxy-service budibase/proxy:$PREPROD_TAG
          docker push budibase/proxy:$PREPROD_TAG
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_API_KEY }}
          PREPROD_TAG: k8s-preprod

      - name: Pull values.yaml from budibase-infra
        run: | 
          curl -H "Authorization: token ${{ secrets.GH_PERSONAL_TOKEN }}" \
          -H 'Accept: application/vnd.github.v3.raw' \
          -o values.preprod.yaml \
          -L https://api.github.com/repos/budibase/budibase-infra/contents/kubernetes/budibase-preprod/values.yaml
          wc -l values.preprod.yaml

      - name: Deploy to Preprod Environment
        uses: glopezep/helm@v1.7.1
        with:
          release: budibase-preprod
          namespace: budibase
          chart: charts/budibase
          token: ${{ github.token }}
          helm: helm3
          values: |
            globals: 
              appVersion: ${{ steps.previoustag.outputs.tag }}
            ingress:
              enabled: true
              nginx: true
          value-files: >-
            [
              "values.preprod.yaml"
            ]
        env:
          KUBECONFIG_FILE: '${{ secrets.PREPROD_KUBECONFIG }}'

      - name: Discord Webhook Action
        uses: tsickert/discord-webhook@v4.0.0
        with:
          webhook-url: ${{ secrets.PROD_DEPLOY_WEBHOOK_URL }}
          content: "Preprod Deployment Complete: ${{ steps.previoustag.outputs.tag }} deployed to Budibase Pre-prod."
          embed-title: ${{ steps.previoustag.outputs.tag }}
