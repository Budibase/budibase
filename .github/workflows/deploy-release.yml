name: Budibase Deploy Release

on:
 workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Fail if branch is not develop
        if: github.ref != 'refs/heads/develop'
        run: | 
          echo "Ref is not develop, you must run this job from develop."
          exit 1

      - name: Get the latest budibase release version
        id: version
        run: | 
          release_version=$(cat lerna.json | jq -r '.version')
          echo "RELEASE_VERSION=$release_version" >> $GITHUB_ENV

      - name: Pull values.yaml from budibase-infra
        run: | 
          curl -H "Authorization: token ${{ secrets.GH_PERSONAL_TOKEN }}" \
          -H 'Accept: application/vnd.github.v3.raw' \
          -o values.release.yaml \
          -L https://api.github.com/repos/budibase/budibase-infra/contents/kubernetes/budibase-release/values.yaml
          wc -l values.release.yaml

      - name: Deploy to Release Environment
        uses: glopezep/helm@v1.7.1
        with:
          release: budibase-release
          namespace: budibase
          chart: charts/budibase
          token: ${{ github.token }}
          helm: helm3
          values: |
            globals: 
              appVersion: develop
            ingress:
              enabled: true
              nginx: true
          value-files: >-
            [
              "values.release.yaml"
            ]
        env:
          KUBECONFIG_FILE: '${{ secrets.RELEASE_KUBECONFIG }}'

      - name: Re roll app-service
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.RELEASE_KUBECONFIG_BASE64 }}
        with:
          args: rollout restart deployment app-service -n budibase

      - name: Re roll proxy-service
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.RELEASE_KUBECONFIG_BASE64 }}
        with:
          args: rollout restart deployment proxy-service -n budibase

      - name: Re roll worker-service
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.RELEASE_KUBECONFIG_BASE64 }}
        with:
          args: rollout restart deployment worker-service -n budibase


      - name: Discord Webhook Action
        uses: tsickert/discord-webhook@v4.0.0
        with:
          webhook-url: ${{ secrets.PROD_DEPLOY_WEBHOOK_URL }}
          content: "Release Env Deployment Complete: ${{ env.RELEASE_VERSION }} deployed to Budibase Release Env."
          embed-title: ${{ env.RELEASE_VERSION }}
