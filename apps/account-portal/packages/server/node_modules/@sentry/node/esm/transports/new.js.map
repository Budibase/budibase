{"version":3,"file":"new.js","sourceRoot":"","sources":["../../../src/transports/new.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  BaseTransportOptions,\n  createTransport,\n  NewTransport,\n  TransportMakeRequestResponse,\n  TransportRequest,\n  TransportRequestExecutor,\n} from '@sentry/core';\nimport { eventStatusFromHttpCode } from '@sentry/utils';\nimport * as http from 'http';\nimport * as https from 'https';\nimport { URL } from 'url';\n\nimport { HTTPModule } from './base/http-module';\n\n// TODO(v7):\n// - Rename this file \"transport.ts\"\n// - Move this file one folder upwards\n// - Delete \"transports\" folder\n// OR\n// - Split this file up and leave it in the transports folder\n\nexport interface NodeTransportOptions extends BaseTransportOptions {\n  /** Define custom headers */\n  headers?: Record<string, string>;\n  /** Set a proxy that should be used for outbound requests. */\n  proxy?: string;\n  /** HTTPS proxy CA certificates */\n  caCerts?: string | Buffer | Array<string | Buffer>;\n  /** Custom HTTP module. Defaults to the native 'http' and 'https' modules. */\n  httpModule?: HTTPModule;\n}\n\n/**\n * Creates a Transport that uses native the native 'http' and 'https' modules to send events to Sentry.\n */\nexport function makeNodeTransport(options: NodeTransportOptions): NewTransport {\n  const urlSegments = new URL(options.url);\n  const isHttps = urlSegments.protocol === 'https:';\n\n  // Proxy prioritization: http => `options.proxy` | `process.env.http_proxy`\n  // Proxy prioritization: https => `options.proxy` | `process.env.https_proxy` | `process.env.http_proxy`\n  const proxy = applyNoProxyOption(\n    urlSegments,\n    options.proxy || (isHttps ? process.env.https_proxy : undefined) || process.env.http_proxy,\n  );\n\n  const nativeHttpModule = isHttps ? https : http;\n\n  // TODO(v7): Evaluate if we can set keepAlive to true. This would involve testing for memory leaks in older node\n  // versions(>= 8) as they had memory leaks when using it: #2555\n  const agent = proxy\n    ? (new (require('https-proxy-agent'))(proxy) as http.Agent)\n    : new nativeHttpModule.Agent({ keepAlive: false, maxSockets: 30, timeout: 2000 });\n\n  const requestExecutor = createRequestExecutor(options, options.httpModule ?? nativeHttpModule, agent);\n  return createTransport({ bufferSize: options.bufferSize }, requestExecutor);\n}\n\n/**\n * Honors the `no_proxy` env variable with the highest priority to allow for hosts exclusion.\n *\n * @param transportUrl The URL the transport intends to send events to.\n * @param proxy The client configured proxy.\n * @returns A proxy the transport should use.\n */\nfunction applyNoProxyOption(transportUrlSegments: URL, proxy: string | undefined): string | undefined {\n  const { no_proxy } = process.env;\n\n  const urlIsExemptFromProxy =\n    no_proxy &&\n    no_proxy\n      .split(',')\n      .some(\n        exemption => transportUrlSegments.host.endsWith(exemption) || transportUrlSegments.hostname.endsWith(exemption),\n      );\n\n  if (urlIsExemptFromProxy) {\n    return undefined;\n  } else {\n    return proxy;\n  }\n}\n\n/**\n * Creates a RequestExecutor to be used with `createTransport`.\n */\nfunction createRequestExecutor(\n  options: NodeTransportOptions,\n  httpModule: HTTPModule,\n  agent: http.Agent,\n): TransportRequestExecutor {\n  const { hostname, pathname, port, protocol, search } = new URL(options.url);\n\n  return function makeRequest(request: TransportRequest): Promise<TransportMakeRequestResponse> {\n    return new Promise((resolve, reject) => {\n      const req = httpModule.request(\n        {\n          method: 'POST',\n          agent,\n          headers: options.headers,\n          hostname,\n          path: `${pathname}${search}`,\n          port,\n          protocol,\n          ca: options.caCerts,\n        },\n        res => {\n          res.on('data', () => {\n            // Drain socket\n          });\n\n          res.on('end', () => {\n            // Drain socket\n          });\n\n          const statusCode = res.statusCode ?? 500;\n          const status = eventStatusFromHttpCode(statusCode);\n\n          res.setEncoding('utf8');\n\n          // \"Key-value pairs of header names and values. Header names are lower-cased.\"\n          // https://nodejs.org/api/http.html#http_message_headers\n          const retryAfterHeader = res.headers['retry-after'] ?? null;\n          const rateLimitsHeader = res.headers['x-sentry-rate-limits'] ?? null;\n\n          resolve({\n            headers: {\n              'retry-after': retryAfterHeader,\n              'x-sentry-rate-limits': Array.isArray(rateLimitsHeader) ? rateLimitsHeader[0] : rateLimitsHeader,\n            },\n            reason: status,\n            statusCode: statusCode,\n          });\n        },\n      );\n\n      req.on('error', reject);\n      req.end(request.body);\n    });\n  };\n}\n"]}