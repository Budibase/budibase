{"version":3,"file":"stack-parser.js","sourceRoot":"","sources":["../../src/stack-parser.ts"],"names":[],"mappings":";AAAA,uCAAsF;AAEtF,sBAAsB;AACtB,SAAS,SAAS,CAAC,QAA4B;IAC7C,IAAI,CAAC,QAAQ,EAAE;QACb,OAAO;KACR;IAED,oFAAoF;IACpF,IAAM,IAAI,GAAG,CACX,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,QAAQ,IAAI,eAAO,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,OAC3G,CAAC;IAEJ,6BAA6B;IAC7B,IAAM,IAAI,GAAG,gBAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IAEvC,IAAM,IAAI,GAAG,eAAO,CAAC,QAAQ,CAAC,CAAC;IAC/B,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;IAC3C,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;QACV,6BAA6B;QAC7B,OAAU,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,SAAI,IAAM,CAAC;KAC7D;IACD,8CAA8C;IAC9C,6DAA6D;IAC7D,CAAC,GAAG,CAAG,IAAI,MAAG,CAAA,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAEpC,IAAI,CAAC,KAAK,CAAC,EAAE;QACX,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QAC9D,IAAI,UAAU,EAAE;YACd,UAAU,IAAI,GAAG,CAAC;SACnB;QACD,UAAU,IAAI,IAAI,CAAC;QACnB,OAAO,UAAU,CAAC;KACnB;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAED,IAAM,cAAc,GAAG,cAAc,CAAC;AACtC,IAAM,UAAU,GAAG,oEAAoE,CAAC;AAExF,sCAAsC;AACtC,IAAM,IAAI,GAAsB,UAAC,IAAY;;IAC3C,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE;QAC9B,OAAO;YACL,QAAQ,EAAE,IAAI;SACf,CAAC;KACH;IAED,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IACzC,IAAI,CAAC,SAAS,EAAE;QACd,OAAO,SAAS,CAAC;KAClB;IAED,IAAI,MAA0B,CAAC;IAC/B,IAAI,MAA0B,CAAC;IAC/B,IAAI,YAAgC,CAAC;IACrC,IAAI,QAA4B,CAAC;IACjC,IAAI,UAA8B,CAAC;IAEnC,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE;QAChB,YAAY,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QAE5B,IAAI,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAChD,IAAI,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;YACzC,uCAAuC;YACvC,WAAW,EAAE,CAAC;SACf;QAED,IAAI,WAAW,GAAG,CAAC,EAAE;YACnB,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;YAC7C,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;YAC9C,IAAM,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAC5C,IAAI,SAAS,GAAG,CAAC,EAAE;gBACjB,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;gBAClD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;aACtC;SACF;QACD,QAAQ,GAAG,SAAS,CAAC;KACtB;IAED,IAAI,MAAM,EAAE;QACV,QAAQ,GAAG,MAAM,CAAC;QAClB,UAAU,GAAG,MAAM,CAAC;KACrB;IAED,IAAI,MAAM,KAAK,aAAa,EAAE;QAC5B,UAAU,GAAG,SAAS,CAAC;QACvB,YAAY,GAAG,SAAS,CAAC;KAC1B;IAED,IAAI,YAAY,KAAK,SAAS,EAAE;QAC9B,UAAU,GAAG,UAAU,IAAI,aAAa,CAAC;QACzC,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAI,QAAQ,SAAI,UAAY,CAAC,CAAC,CAAC,UAAU,CAAC;KACpE;IAED,IAAM,QAAQ,GAAG,OAAA,SAAS,CAAC,CAAC,CAAC,0CAAE,UAAU,CAAC,SAAS,GAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7F,IAAM,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC;IAC3C,IAAM,UAAU,GACd,QAAQ,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IAEpH,qFAAqF;IACrF,yEAAyE;IACzE,yDAAyD;IACzD,IAAM,MAAM,GAAG,CAAC,UAAU,IAAI,QAAQ,KAAK,SAAS,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;IAE5F,OAAO;QACL,QAAQ,UAAA;QACR,MAAM,EAAE,SAAS,CAAC,QAAQ,CAAC;QAC3B,QAAQ,EAAE,YAAY;QACtB,MAAM,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,SAAS;QAC/C,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,SAAS;QAC9C,MAAM,QAAA;KACP,CAAC;AACJ,CAAC,CAAC;AAEW,QAAA,eAAe,GAAoB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC","sourcesContent":["import { basename, dirname, StackLineParser, StackLineParserFn } from '@sentry/utils';\n\n/** Gets the module */\nfunction getModule(filename: string | undefined): string | undefined {\n  if (!filename) {\n    return;\n  }\n\n  // We could use optional chaining here but webpack does like that mixed with require\n  const base = `${\n    (require && require.main && require.main.filename && dirname(require.main.filename)) || global.process.cwd()\n  }/`;\n\n  // It's specifically a module\n  const file = basename(filename, '.js');\n\n  const path = dirname(filename);\n  let n = path.lastIndexOf('/node_modules/');\n  if (n > -1) {\n    // /node_modules/ is 14 chars\n    return `${path.substr(n + 14).replace(/\\//g, '.')}:${file}`;\n  }\n  // Let's see if it's a part of the main module\n  // To be a part of main module, it has to share the same base\n  n = `${path}/`.lastIndexOf(base, 0);\n\n  if (n === 0) {\n    let moduleName = path.substr(base.length).replace(/\\//g, '.');\n    if (moduleName) {\n      moduleName += ':';\n    }\n    moduleName += file;\n    return moduleName;\n  }\n  return file;\n}\n\nconst FILENAME_MATCH = /^\\s*[-]{4,}$/;\nconst FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+?):(\\d+)(?::(\\d+))?|([^)]+))\\)?/;\n\n// eslint-disable-next-line complexity\nconst node: StackLineParserFn = (line: string) => {\n  if (line.match(FILENAME_MATCH)) {\n    return {\n      filename: line,\n    };\n  }\n\n  const lineMatch = line.match(FULL_MATCH);\n  if (!lineMatch) {\n    return undefined;\n  }\n\n  let object: string | undefined;\n  let method: string | undefined;\n  let functionName: string | undefined;\n  let typeName: string | undefined;\n  let methodName: string | undefined;\n\n  if (lineMatch[1]) {\n    functionName = lineMatch[1];\n\n    let methodStart = functionName.lastIndexOf('.');\n    if (functionName[methodStart - 1] === '.') {\n      // eslint-disable-next-line no-plusplus\n      methodStart--;\n    }\n\n    if (methodStart > 0) {\n      object = functionName.substr(0, methodStart);\n      method = functionName.substr(methodStart + 1);\n      const objectEnd = object.indexOf('.Module');\n      if (objectEnd > 0) {\n        functionName = functionName.substr(objectEnd + 1);\n        object = object.substr(0, objectEnd);\n      }\n    }\n    typeName = undefined;\n  }\n\n  if (method) {\n    typeName = object;\n    methodName = method;\n  }\n\n  if (method === '<anonymous>') {\n    methodName = undefined;\n    functionName = undefined;\n  }\n\n  if (functionName === undefined) {\n    methodName = methodName || '<anonymous>';\n    functionName = typeName ? `${typeName}.${methodName}` : methodName;\n  }\n\n  const filename = lineMatch[2]?.startsWith('file://') ? lineMatch[2].substr(7) : lineMatch[2];\n  const isNative = lineMatch[5] === 'native';\n  const isInternal =\n    isNative || (filename && !filename.startsWith('/') && !filename.startsWith('.') && filename.indexOf(':\\\\') !== 1);\n\n  // in_app is all that's not an internal Node function or a module within node_modules\n  // note that isNative appears to return true even for node core libraries\n  // see https://github.com/getsentry/raven-node/issues/176\n  const in_app = !isInternal && filename !== undefined && !filename.includes('node_modules/');\n\n  return {\n    filename,\n    module: getModule(filename),\n    function: functionName,\n    lineno: parseInt(lineMatch[3], 10) || undefined,\n    colno: parseInt(lineMatch[4], 10) || undefined,\n    in_app,\n  };\n};\n\nexport const nodeStackParser: StackLineParser = [90, node];\n"]}