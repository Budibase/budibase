{"version":3,"file":"linkederrors.js","sourceRoot":"","sources":["../../../src/integrations/linkederrors.ts"],"names":[],"mappings":"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","sourcesContent":["import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, EventHint, Exception, ExtendedError, Integration } from '@sentry/types';\nimport { isInstanceOf, resolvedSyncPromise, SyncPromise } from '@sentry/utils';\n\nimport { exceptionFromError } from '../eventbuilder';\nimport { ContextLines } from './contextlines';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nexport class LinkedErrors implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'LinkedErrors';\n\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = LinkedErrors.id;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _key: string;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _limit: number;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { key?: string; limit?: number } = {}) {\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event, hint?: EventHint) => {\n      const self = getCurrentHub().getIntegration(LinkedErrors);\n      if (self) {\n        const handler = self._handler && self._handler.bind(self);\n        return typeof handler === 'function' ? handler(event, hint) : event;\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _handler(event: Event, hint?: EventHint): PromiseLike<Event> {\n    if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n      return resolvedSyncPromise(event);\n    }\n\n    return new SyncPromise<Event>(resolve => {\n      void this._walkErrorTree(hint.originalException as Error, this._key)\n        .then((linkedErrors: Exception[]) => {\n          if (event && event.exception && event.exception.values) {\n            event.exception.values = [...linkedErrors, ...event.exception.values];\n          }\n          resolve(event);\n        })\n        .then(null, () => {\n          resolve(event);\n        });\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private async _walkErrorTree(error: ExtendedError, key: string, stack: Exception[] = []): Promise<Exception[]> {\n    if (!isInstanceOf(error[key], Error) || stack.length + 1 >= this._limit) {\n      return Promise.resolve(stack);\n    }\n\n    const exception = exceptionFromError(error[key]);\n\n    // If the ContextLines integration is enabled, we add source code context to linked errors\n    // because we can't guarantee the order that integrations are run.\n    const contextLines = getCurrentHub().getIntegration(ContextLines);\n    if (contextLines && exception.stacktrace?.frames) {\n      await contextLines.addSourceContextToFrames(exception.stacktrace.frames);\n    }\n\n    return new Promise<Exception[]>((resolve, reject) => {\n      void this._walkErrorTree(error[key], key, [exception, ...stack])\n        .then(resolve)\n        .then(null, () => {\n          reject();\n        });\n    });\n  }\n}\n"]}