{"version":3,"file":"severity.js","sourceRoot":"","sources":["../../src/severity.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAEzC,OAAO,EAAiB,cAAc,EAAE,MAAM,SAAS,CAAC;AAExD,SAAS,mBAAmB,CAAC,KAAa;IACxC,OAAO,cAAc,CAAC,OAAO,CAAC,KAAsB,CAAC,KAAK,CAAC,CAAC,CAAC;AAC/D,CAAC;AACD;;;;;GAKG;AACH,MAAM,UAAU,kBAAkB,CAAC,KAA6B;IAC9D,IAAI,KAAK,KAAK,MAAM;QAAE,OAAO,QAAQ,CAAC,OAAO,CAAC;IAC9C,IAAI,mBAAmB,CAAC,KAAK,CAAC,EAAE;QAC9B,OAAO,KAAK,CAAC;KACd;IACD,OAAO,QAAQ,CAAC,GAAG,CAAC;AACtB,CAAC","sourcesContent":["import { Severity } from '@sentry/types';\n\nimport { SeverityLevel, SeverityLevels } from './enums';\n\nfunction isSupportedSeverity(level: string): level is Severity {\n  return SeverityLevels.indexOf(level as SeverityLevel) !== -1;\n}\n/**\n * Converts a string-based level into a {@link Severity}.\n *\n * @param level string representation of Severity\n * @returns Severity\n */\nexport function severityFromString(level: SeverityLevel | string): Severity {\n  if (level === 'warn') return Severity.Warning;\n  if (isSupportedSeverity(level)) {\n    return level;\n  }\n  return Severity.Log;\n}\n"]}