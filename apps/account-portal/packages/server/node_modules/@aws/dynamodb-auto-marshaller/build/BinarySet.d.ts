import { ObjectSet } from "./ObjectSet";
export declare type BinaryValue = ArrayBuffer | ArrayBufferView;
/**
 * A set of binary values represented as either ArrayBuffer objects or
 * ArrayBufferView objects. Equality is determined by the underlying byte
 * sequence and not by the identity or view window type of the provided value.
 */
export declare class BinarySet extends ObjectSet<BinaryValue> {
    delete(value: BinaryValue): boolean;
    /**
     * @inheritDoc
     *
     * Equality is determined by inspecting the bytes of the ArrayBuffer or
     * ArrayBufferView.
     *
     * @example On a little-endian system, the following values would be
     * considered equal:
     *
     *     new Uint32Array([0xdeadbeef]);
     *     (new Uint32Array([0xdeadbeef])).buffer;
     *     new Uint16Array([0xbeef, 0xdead]);
     *     new Uint8Array([0xef, 0xbe, 0xad, 0xde]);
     */
    has(value: BinaryValue): boolean;
}
