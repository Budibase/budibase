"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NUMBER_VALUE_TAG = 'DynamoDbNumberValue';
var EXPECTED_TAG = "[object " + NUMBER_VALUE_TAG + "]";
/**
 * A number that may contain greater precision than can safely be stored in
 * JavaScript's `number` data type. Numerical values are represented internally
 * as strings (the format used by DynamoDB's JSON-based data representation
 * schema).
 */
var NumberValue = /** @class */ (function () {
    function NumberValue(value) {
        this[Symbol.toStringTag] = NUMBER_VALUE_TAG;
        this.value = value.toString().trim();
    }
    /**
     * Convert the value to its desired JSON representation. Called by
     * `JSON.stringify`.
     */
    NumberValue.prototype.toJSON = function () {
        return this.valueOf();
    };
    /**
     * Convert the value to its desired string representation. Called
     * automatically when objects are coerced into strings.
     */
    NumberValue.prototype.toString = function () {
        return this.value;
    };
    /**
     * Convert the value to its desired literal representation. Called
     * automatically when objects appear in arithmetic expressions.
     */
    NumberValue.prototype.valueOf = function () {
        return Number(this.value);
    };
    /**
     * Evaluate whether the provided value is a NumberValue object.
     */
    NumberValue.isNumberValue = function (arg) {
        return (typeof NumberValue === 'function' && arg instanceof NumberValue)
            || Object.prototype.toString.call(arg) === EXPECTED_TAG;
    };
    return NumberValue;
}());
exports.NumberValue = NumberValue;
