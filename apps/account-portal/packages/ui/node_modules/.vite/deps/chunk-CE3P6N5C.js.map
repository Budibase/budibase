{
  "version": 3,
  "sources": ["../../../../../../../packages/shared-core/src/index.ts", "../../../../../../../packages/shared-core/src/constants.ts", "../../../../../../../packages/shared-core/src/filters.ts", "../../../../../../../packages/types/src/sdk/events/event.ts", "../../../../../../../packages/types/src/sdk/cli/constants.ts", "../../../../../../../packages/types/src/documents/app/automation.ts", "../../../../../../../packages/types/src/documents/document.ts", "../../../../../../../packages/types/src/documents/global/plugin.ts", "../../../../../../../packages/types/src/documents/global/quotas.ts", "../../../../../../../packages/shared-core/src/helpers/index.ts", "../../../../../../../packages/shared-core/src/helpers/helpers.ts", "../../../../../../../packages/shared-core/src/helpers/integrations.ts", "../../../../../../../packages/shared-core/src/utils.ts", "../../../../../../../packages/shared-core/src/sdk/index.ts", "../../../../../../../packages/shared-core/src/sdk/documents/applications.ts", "../../../../../../../packages/shared-core/src/sdk/documents/users.ts", "../../../../../../../packages/shared-core/src/table.ts"],
  "sourcesContent": ["export * from \"./constants\"\nexport * as dataFilters from \"./filters\"\nexport * as helpers from \"./helpers\"\nexport * as utils from \"./utils\"\nexport * as sdk from \"./sdk\"\nexport * from \"./table\"\n", "export const OperatorOptions = {\n  Equals: {\n    value: \"equal\",\n    label: \"Equals\",\n  },\n  NotEquals: {\n    value: \"notEqual\",\n    label: \"Not equals\",\n  },\n  Empty: {\n    value: \"empty\",\n    label: \"Is empty\",\n  },\n  NotEmpty: {\n    value: \"notEmpty\",\n    label: \"Is not empty\",\n  },\n  StartsWith: {\n    value: \"string\",\n    label: \"Starts with\",\n  },\n  Like: {\n    value: \"fuzzy\",\n    label: \"Like\",\n  },\n  MoreThan: {\n    value: \"rangeLow\",\n    label: \"More than or equal to\",\n  },\n  LessThan: {\n    value: \"rangeHigh\",\n    label: \"Less than or equal to\",\n  },\n  Contains: {\n    value: \"contains\",\n    label: \"Contains\",\n  },\n  NotContains: {\n    value: \"notContains\",\n    label: \"Does not contain\",\n  },\n  In: {\n    value: \"oneOf\",\n    label: \"Is in\",\n  },\n  ContainsAny: {\n    value: \"containsAny\",\n    label: \"Has any\",\n  },\n}\n\nexport const SqlNumberTypeRangeMap = {\n  integer: {\n    max: 2147483647,\n    min: -2147483648,\n  },\n  int: {\n    max: 2147483647,\n    min: -2147483648,\n  },\n  smallint: {\n    max: 32767,\n    min: -32768,\n  },\n  mediumint: {\n    max: 8388607,\n    min: -8388608,\n  },\n}\n\nexport enum SocketEvent {\n  UserUpdate = \"UserUpdate\",\n  UserDisconnect = \"UserDisconnect\",\n  Heartbeat = \"Heartbeat\",\n}\n\nexport enum GridSocketEvent {\n  RowChange = \"RowChange\",\n  DatasourceChange = \"DatasourceChange\",\n  SelectDatasource = \"SelectDatasource\",\n  SelectCell = \"SelectCell\",\n}\n\nexport enum BuilderSocketEvent {\n  SelectApp = \"SelectApp\",\n  TableChange = \"TableChange\",\n  DatasourceChange = \"DatasourceChange\",\n  LockTransfer = \"LockTransfer\",\n  ScreenChange = \"ScreenChange\",\n  AppMetadataChange = \"AppMetadataChange\",\n  SelectResource = \"SelectResource\",\n  AppPublishChange = \"AppPublishChange\",\n  AutomationChange = \"AutomationChange\",\n}\n\nexport const SocketSessionTTL = 60\nexport const ValidQueryNameRegex = /^[^()]*$/\nexport const ValidColumnNameRegex = /^[_a-zA-Z0-9\\s]*$/g\n", "import {\n  Datasource,\n  FieldSubtype,\n  FieldType,\n  SearchFilter,\n  SearchQuery,\n  SearchQueryFields,\n  SearchQueryOperators,\n  SortDirection,\n  SortType,\n} from \"@budibase/types\"\nimport { OperatorOptions, SqlNumberTypeRangeMap } from \"./constants\"\nimport { deepGet } from \"./helpers\"\n\nconst HBS_REGEX = /{{([^{].*?)}}/g\n\n/**\n * Returns the valid operator options for a certain data type\n */\nexport const getValidOperatorsForType = (\n  fieldType: { type: FieldType; subtype?: FieldSubtype },\n  field: string,\n  datasource: Datasource & { tableId: any } // TODO: is this table id ever populated?\n) => {\n  const Op = OperatorOptions\n  const stringOps = [\n    Op.Equals,\n    Op.NotEquals,\n    Op.StartsWith,\n    Op.Like,\n    Op.Empty,\n    Op.NotEmpty,\n    Op.In,\n  ]\n  const numOps = [\n    Op.Equals,\n    Op.NotEquals,\n    Op.MoreThan,\n    Op.LessThan,\n    Op.Empty,\n    Op.NotEmpty,\n    Op.In,\n  ]\n  let ops: {\n    value: string\n    label: string\n  }[] = []\n  const { type, subtype } = fieldType\n  if (type === FieldType.STRING) {\n    ops = stringOps\n  } else if (type === FieldType.NUMBER || type === FieldType.BIGINT) {\n    ops = numOps\n  } else if (type === FieldType.OPTIONS) {\n    ops = [Op.Equals, Op.NotEquals, Op.Empty, Op.NotEmpty, Op.In]\n  } else if (type === FieldType.ARRAY) {\n    ops = [Op.Contains, Op.NotContains, Op.Empty, Op.NotEmpty, Op.ContainsAny]\n  } else if (type === FieldType.BOOLEAN) {\n    ops = [Op.Equals, Op.NotEquals, Op.Empty, Op.NotEmpty]\n  } else if (type === FieldType.LONGFORM) {\n    ops = stringOps\n  } else if (type === FieldType.DATETIME) {\n    ops = numOps\n  } else if (type === FieldType.FORMULA) {\n    ops = stringOps.concat([Op.MoreThan, Op.LessThan])\n  } else if (type === FieldType.BB_REFERENCE && subtype == FieldSubtype.USER) {\n    ops = [Op.Equals, Op.NotEquals, Op.Empty, Op.NotEmpty, Op.In]\n  } else if (type === FieldType.BB_REFERENCE && subtype == FieldSubtype.USERS) {\n    ops = [Op.Contains, Op.NotContains, Op.ContainsAny, Op.Empty, Op.NotEmpty]\n  }\n\n  // Only allow equal/not equal for _id in SQL tables\n  const externalTable = datasource?.tableId?.includes(\"datasource_plus\")\n  if (field === \"_id\" && externalTable) {\n    ops = [Op.Equals, Op.NotEquals, Op.In]\n  }\n\n  return ops\n}\n\n/**\n * Operators which do not support empty strings as values\n */\nexport const NoEmptyFilterStrings = [\n  OperatorOptions.StartsWith.value,\n  OperatorOptions.Like.value,\n  OperatorOptions.Equals.value,\n  OperatorOptions.NotEquals.value,\n  OperatorOptions.Contains.value,\n  OperatorOptions.NotContains.value,\n] as (keyof SearchQueryFields)[]\n\n/**\n * Removes any fields that contain empty strings that would cause inconsistent\n * behaviour with how backend tables are filtered (no value means no filter).\n */\nconst cleanupQuery = (query: SearchQuery) => {\n  if (!query) {\n    return query\n  }\n  for (let filterField of NoEmptyFilterStrings) {\n    if (!query[filterField]) {\n      continue\n    }\n\n    for (let [key, value] of Object.entries(query[filterField]!)) {\n      if (value == null || value === \"\") {\n        delete query[filterField]![key]\n      }\n    }\n  }\n  return query\n}\n\n/**\n * Removes a numeric prefix on field names designed to give fields uniqueness\n */\nconst removeKeyNumbering = (key: string) => {\n  if (typeof key === \"string\" && key.match(/\\d[0-9]*:/g) != null) {\n    const parts = key.split(\":\")\n    parts.shift()\n    return parts.join(\":\")\n  } else {\n    return key\n  }\n}\n\n/**\n * Builds a lucene JSON query from the filter structure generated in the builder\n * @param filter the builder filter structure\n */\nexport const buildLuceneQuery = (filter: SearchFilter[]) => {\n  let query: SearchQuery = {\n    string: {},\n    fuzzy: {},\n    range: {},\n    equal: {},\n    notEqual: {},\n    empty: {},\n    notEmpty: {},\n    contains: {},\n    notContains: {},\n    oneOf: {},\n    containsAny: {},\n  }\n  if (Array.isArray(filter)) {\n    filter.forEach(expression => {\n      let { operator, field, type, value, externalType, onEmptyFilter } =\n        expression\n      const isHbs =\n        typeof value === \"string\" && (value.match(HBS_REGEX) || []).length > 0\n      // Parse all values into correct types\n      if (operator === \"allOr\") {\n        query.allOr = true\n        return\n      }\n      if (onEmptyFilter) {\n        query.onEmptyFilter = onEmptyFilter\n        return\n      }\n      if (\n        type === \"datetime\" &&\n        !isHbs &&\n        operator !== \"empty\" &&\n        operator !== \"notEmpty\"\n      ) {\n        // Ensure date value is a valid date and parse into correct format\n        if (!value) {\n          return\n        }\n        try {\n          value = new Date(value).toISOString()\n        } catch (error) {\n          return\n        }\n      }\n      if (type === \"number\" && typeof value === \"string\") {\n        if (operator === \"oneOf\") {\n          value = value.split(\",\").map(item => parseFloat(item))\n        } else if (!isHbs) {\n          value = parseFloat(value)\n        }\n      }\n      if (type === \"boolean\") {\n        value = `${value}`?.toLowerCase() === \"true\"\n      }\n      if (\n        [\"contains\", \"notContains\", \"containsAny\"].includes(operator) &&\n        type === \"array\" &&\n        typeof value === \"string\"\n      ) {\n        value = value.split(\",\")\n      }\n      if (operator.startsWith(\"range\") && query.range) {\n        const minint =\n          SqlNumberTypeRangeMap[\n            externalType as keyof typeof SqlNumberTypeRangeMap\n          ]?.min || Number.MIN_SAFE_INTEGER\n        const maxint =\n          SqlNumberTypeRangeMap[\n            externalType as keyof typeof SqlNumberTypeRangeMap\n          ]?.max || Number.MAX_SAFE_INTEGER\n        if (!query.range[field]) {\n          query.range[field] = {\n            low: type === \"number\" ? minint : \"0000-00-00T00:00:00.000Z\",\n            high: type === \"number\" ? maxint : \"9999-00-00T00:00:00.000Z\",\n          }\n        }\n        if ((operator as any) === \"rangeLow\" && value != null && value !== \"\") {\n          query.range[field].low = value\n        } else if (\n          (operator as any) === \"rangeHigh\" &&\n          value != null &&\n          value !== \"\"\n        ) {\n          query.range[field].high = value\n        }\n      } else if (query[operator] && operator !== \"onEmptyFilter\") {\n        if (type === \"boolean\") {\n          // Transform boolean filters to cope with null.\n          // \"equals false\" needs to be \"not equals true\"\n          // \"not equals false\" needs to be \"equals true\"\n          if (operator === \"equal\" && value === false) {\n            query.notEqual = query.notEqual || {}\n            query.notEqual[field] = true\n          } else if (operator === \"notEqual\" && value === false) {\n            query.equal = query.equal || {}\n            query.equal[field] = true\n          } else {\n            query[operator] = query[operator] || {}\n            query[operator]![field] = value\n          }\n        } else {\n          query[operator] = query[operator] || {}\n          query[operator]![field] = value\n        }\n      }\n    })\n  }\n  return query\n}\n\n/**\n * Performs a client-side lucene search on an array of data\n * @param docs the data\n * @param query the JSON lucene query\n */\nexport const runLuceneQuery = (docs: any[], query?: SearchQuery) => {\n  if (!docs || !Array.isArray(docs)) {\n    return []\n  }\n  if (!query) {\n    return docs\n  }\n\n  // Make query consistent first\n  query = cleanupQuery(query)\n\n  // Iterates over a set of filters and evaluates a fail function against a doc\n  const match =\n    (\n      type: keyof SearchQueryFields,\n      failFn: (docValue: any, testValue: any) => boolean\n    ) =>\n    (doc: any) => {\n      const filters = Object.entries(query![type] || {})\n      for (let i = 0; i < filters.length; i++) {\n        const [key, testValue] = filters[i]\n        const docValue = deepGet(doc, removeKeyNumbering(key))\n        if (failFn(docValue, testValue)) {\n          return false\n        }\n      }\n      return true\n    }\n\n  // Process a string match (fails if the value does not start with the string)\n  const stringMatch = match(\n    SearchQueryOperators.STRING,\n    (docValue: string, testValue: string) => {\n      return (\n        !docValue ||\n        !docValue?.toLowerCase().startsWith(testValue?.toLowerCase())\n      )\n    }\n  )\n\n  // Process a fuzzy match (treat the same as starts with when running locally)\n  const fuzzyMatch = match(\n    SearchQueryOperators.FUZZY,\n    (docValue: string, testValue: string) => {\n      return (\n        !docValue ||\n        !docValue?.toLowerCase().startsWith(testValue?.toLowerCase())\n      )\n    }\n  )\n\n  // Process a range match\n  const rangeMatch = match(\n    SearchQueryOperators.RANGE,\n    (\n      docValue: string | number | null,\n      testValue: { low: number; high: number }\n    ) => {\n      return (\n        docValue == null ||\n        docValue === \"\" ||\n        +docValue < testValue.low ||\n        +docValue > testValue.high\n      )\n    }\n  )\n\n  // Process an equal match (fails if the value is different)\n  const equalMatch = match(\n    SearchQueryOperators.EQUAL,\n    (docValue: any, testValue: string | null) => {\n      return testValue != null && testValue !== \"\" && docValue !== testValue\n    }\n  )\n\n  // Process a not-equal match (fails if the value is the same)\n  const notEqualMatch = match(\n    SearchQueryOperators.NOT_EQUAL,\n    (docValue: any, testValue: string | null) => {\n      return testValue != null && testValue !== \"\" && docValue === testValue\n    }\n  )\n\n  // Process an empty match (fails if the value is not empty)\n  const emptyMatch = match(\n    SearchQueryOperators.EMPTY,\n    (docValue: string | null) => {\n      return docValue != null && docValue !== \"\"\n    }\n  )\n\n  // Process a not-empty match (fails is the value is empty)\n  const notEmptyMatch = match(\n    SearchQueryOperators.NOT_EMPTY,\n    (docValue: string | null) => {\n      return docValue == null || docValue === \"\"\n    }\n  )\n\n  // Process an includes match (fails if the value is not included)\n  const oneOf = match(\n    SearchQueryOperators.ONE_OF,\n    (docValue: any, testValue: any) => {\n      if (typeof testValue === \"string\") {\n        testValue = testValue.split(\",\")\n        if (typeof docValue === \"number\") {\n          testValue = testValue.map((item: string) => parseFloat(item))\n        }\n      }\n      return !testValue?.includes(docValue)\n    }\n  )\n\n  const containsAny = match(\n    SearchQueryOperators.CONTAINS_ANY,\n    (docValue: any, testValue: any) => {\n      return !docValue?.includes(...testValue)\n    }\n  )\n\n  const contains = match(\n    SearchQueryOperators.CONTAINS,\n    (docValue: string | any[], testValue: any[]) => {\n      return !testValue?.every((item: any) => docValue?.includes(item))\n    }\n  )\n\n  const notContains = match(\n    SearchQueryOperators.NOT_CONTAINS,\n    (docValue: string | any[], testValue: any[]) => {\n      return testValue?.every((item: any) => docValue?.includes(item))\n    }\n  )\n\n  // Match a document against all criteria\n  const docMatch = (doc: any) => {\n    return (\n      stringMatch(doc) &&\n      fuzzyMatch(doc) &&\n      rangeMatch(doc) &&\n      equalMatch(doc) &&\n      notEqualMatch(doc) &&\n      emptyMatch(doc) &&\n      notEmptyMatch(doc) &&\n      oneOf(doc) &&\n      contains(doc) &&\n      containsAny(doc) &&\n      notContains(doc)\n    )\n  }\n\n  // Process all docs\n  return docs.filter(docMatch)\n}\n\n/**\n * Performs a client-side sort from the equivalent server-side lucene sort\n * parameters.\n * @param docs the data\n * @param sort the sort column\n * @param sortOrder the sort order (\"ascending\" or \"descending\")\n * @param sortType the type of sort (\"string\" or \"number\")\n */\nexport const luceneSort = (\n  docs: any[],\n  sort: string,\n  sortOrder: SortDirection,\n  sortType = SortType.STRING\n) => {\n  if (!sort || !sortOrder || !sortType) {\n    return docs\n  }\n  const parse =\n    sortType === \"string\" ? (x: any) => `${x}` : (x: string) => parseFloat(x)\n  return docs\n    .slice()\n    .sort((a: { [x: string]: any }, b: { [x: string]: any }) => {\n      const colA = parse(a[sort])\n      const colB = parse(b[sort])\n      if (sortOrder.toLowerCase() === \"descending\") {\n        return colA > colB ? -1 : 1\n      } else {\n        return colA > colB ? 1 : -1\n      }\n    })\n}\n\n/**\n * Limits the specified docs to the specified number of rows from the equivalent\n * server-side lucene limit parameters.\n * @param docs the data\n * @param limit the number of docs to limit to\n */\nexport const luceneLimit = (docs: any[], limit: string) => {\n  const numLimit = parseFloat(limit)\n  if (isNaN(numLimit)) {\n    return docs\n  }\n  return docs.slice(0, numLimit)\n}\n\nexport const hasFilters = (query?: SearchQuery) => {\n  if (!query) {\n    return false\n  }\n  const skipped = [\"allOr\", \"onEmptyFilter\"]\n  for (let [key, value] of Object.entries(query)) {\n    if (skipped.includes(key) || typeof value !== \"object\") {\n      continue\n    }\n    if (Object.keys(value || {}).length !== 0) {\n      return true\n    }\n  }\n  return false\n}\n", "import { Hosting } from \"../hosting\"\nimport { Group, Identity } from \"./identification\"\n\nexport enum Event {\n  // USER\n  USER_CREATED = \"user:created\",\n  USER_UPDATED = \"user:updated\",\n  USER_DELETED = \"user:deleted\",\n\n  // USER / ONBOARDING\n  USER_ONBOARDING_COMPLETE = \"user:onboarding:complete\",\n\n  // USER / PERMISSIONS\n  USER_PERMISSION_ADMIN_ASSIGNED = \"user:admin:assigned\",\n  USER_PERMISSION_ADMIN_REMOVED = \"user:admin:removed\",\n  USER_PERMISSION_BUILDER_ASSIGNED = \"user:builder:assigned\",\n  USER_PERMISSION_BUILDER_REMOVED = \"user:builder:removed\",\n\n  // USER / INVITE\n  USER_INVITED = \"user:invited\",\n  USER_INVITED_ACCEPTED = \"user:invite:accepted\",\n\n  // USER / PASSWORD\n  USER_PASSWORD_FORCE_RESET = \"user:password:force:reset\",\n  USER_PASSWORD_UPDATED = \"user:password:updated\",\n  USER_PASSWORD_RESET_REQUESTED = \"user:password:reset:requested\",\n  USER_PASSWORD_RESET = \"user:password:reset\",\n\n  // USER / COLLABORATION\n  USER_DATA_COLLABORATION = \"user:data:collaboration\",\n\n  // EMAIL\n  EMAIL_SMTP_CREATED = \"email:smtp:created\",\n  EMAIL_SMTP_UPDATED = \"email:smtp:updated\",\n\n  // AUTH\n  AUTH_SSO_CREATED = \"auth:sso:created\",\n  AUTH_SSO_UPDATED = \"auth:sso:updated\",\n  AUTH_SSO_ACTIVATED = \"auth:sso:activated\",\n  AUTH_SSO_DEACTIVATED = \"auth:sso:deactivated\",\n  AUTH_LOGIN = \"auth:login\",\n  AUTH_LOGOUT = \"auth:logout\",\n\n  // ORG\n  ORG_NAME_UPDATED = \"org:info:name:updated\",\n  ORG_LOGO_UPDATED = \"org:info:logo:updated\",\n  ORG_PLATFORM_URL_UPDATED = \"org:platformurl:updated\",\n\n  // INSTALLATION\n  INSTALLATION_VERSION_CHECKED = \"installation:version:checked\",\n  INSTALLATION_VERSION_UPGRADED = \"installation:version:upgraded\",\n  INSTALLATION_VERSION_DOWNGRADED = \"installation:version:downgraded\",\n  INSTALLATION_FIRST_STARTUP = \"installation:firstStartup\",\n\n  // ORG / ANALYTICS\n  ANALYTICS_OPT_OUT = \"analytics:opt:out\",\n  ANALYTICS_OPT_IN = \"analytics:opt:in\",\n\n  // APP\n  APP_CREATED = \"app:created\",\n  APP_UPDATED = \"app:updated\",\n  APP_DELETED = \"app:deleted\",\n  APP_PUBLISHED = \"app:published\",\n  APP_UNPUBLISHED = \"app:unpublished\",\n  APP_TEMPLATE_IMPORTED = \"app:template:imported\",\n  APP_FILE_IMPORTED = \"app:file:imported\",\n  APP_VERSION_UPDATED = \"app:version:updated\",\n  APP_VERSION_REVERTED = \"app:version:reverted\",\n  APP_REVERTED = \"app:reverted\",\n  APP_EXPORTED = \"app:exported\",\n\n  // ROLE\n  ROLE_CREATED = \"role:created\",\n  ROLE_UPDATED = \"role:updated\",\n  ROLE_DELETED = \"role:deleted\",\n  ROLE_ASSIGNED = \"role:assigned\",\n  ROLE_UNASSIGNED = \"role:unassigned\",\n\n  // SERVE\n  SERVED_BUILDER = \"served:builder\",\n  SERVED_APP = \"served:app\",\n  SERVED_APP_PREVIEW = \"served:app:preview\",\n\n  // DATASOURCE\n  DATASOURCE_CREATED = \"datasource:created\",\n  DATASOURCE_UPDATED = \"datasource:updated\",\n  DATASOURCE_DELETED = \"datasource:deleted\",\n\n  // QUERY\n  QUERY_CREATED = \"query:created\",\n  QUERY_UPDATED = \"query:updated\",\n  QUERY_DELETED = \"query:deleted\",\n  QUERY_IMPORT = \"query:import\",\n  QUERIES_RUN = \"queries:run\",\n  QUERY_PREVIEWED = \"query:previewed\",\n\n  // TABLE\n  TABLE_CREATED = \"table:created\",\n  TABLE_UPDATED = \"table:updated\",\n  TABLE_DELETED = \"table:deleted\",\n  TABLE_EXPORTED = \"table:exported\",\n  TABLE_IMPORTED = \"table:imported\",\n  TABLE_DATA_IMPORTED = \"table:data:imported\",\n\n  // VIEW\n  VIEW_CREATED = \"view:created\",\n  VIEW_UPDATED = \"view:updated\",\n  VIEW_DELETED = \"view:deleted\",\n  VIEW_EXPORTED = \"view:exported\",\n  VIEW_FILTER_CREATED = \"view:filter:created\",\n  VIEW_FILTER_UPDATED = \"view:filter:updated\",\n  VIEW_FILTER_DELETED = \"view:filter:deleted\",\n  VIEW_CALCULATION_CREATED = \"view:calculation:created\",\n  VIEW_CALCULATION_UPDATED = \"view:calculation:updated\",\n  VIEW_CALCULATION_DELETED = \"view:calculation:deleted\",\n\n  // ROWS\n  ROWS_CREATED = \"rows:created\",\n  ROWS_IMPORTED = \"rows:imported\",\n\n  // COMPONENT\n  COMPONENT_CREATED = \"component:created\",\n  COMPONENT_DELETED = \"component:deleted\",\n\n  // SCREEN\n  SCREEN_CREATED = \"screen:created\",\n  SCREEN_DELETED = \"screen:deleted\",\n\n  // LAYOUT\n  LAYOUT_CREATED = \"layout:created\",\n  LAYOUT_DELETED = \"layout:deleted\",\n\n  // AUTOMATION\n  AUTOMATION_CREATED = \"automation:created\",\n  AUTOMATION_DELETED = \"automation:deleted\",\n  AUTOMATION_TESTED = \"automation:tested\",\n  AUTOMATIONS_RUN = \"automations:run\",\n  AUTOMATION_STEP_CREATED = \"automation:step:created\",\n  AUTOMATION_STEP_DELETED = \"automation:step:deleted\",\n  AUTOMATION_TRIGGER_UPDATED = \"automation:trigger:updated\",\n\n  // LICENSE\n  LICENSE_PLAN_CHANGED = \"license:plan:changed\",\n  LICENSE_ACTIVATED = \"license:activated\",\n  LICENSE_PAYMENT_FAILED = \"license:payment:failed\",\n  LICENSE_PAYMENT_RECOVERED = \"license:payment:recovered\",\n  LICENSE_CHECKOUT_OPENED = \"license:checkout:opened\",\n  LICENSE_CHECKOUT_SUCCESS = \"license:checkout:success\",\n  LICENSE_PORTAL_OPENED = \"license:portal:opened\",\n\n  // ACCOUNT\n  ACCOUNT_CREATED = \"account:created\",\n  ACCOUNT_DELETED = \"account:deleted\",\n  ACCOUNT_VERIFIED = \"account:verified\",\n\n  // BACKFILL\n  APP_BACKFILL_SUCCEEDED = \"app:backfill:succeeded\",\n  APP_BACKFILL_FAILED = \"app:backfill:failed\",\n  TENANT_BACKFILL_SUCCEEDED = \"tenant:backfill:succeeded\",\n  TENANT_BACKFILL_FAILED = \"tenant:backfill:failed\",\n  INSTALLATION_BACKFILL_SUCCEEDED = \"installation:backfill:succeeded\",\n  INSTALLATION_BACKFILL_FAILED = \"installation:backfill:failed\",\n\n  // USER\n  USER_GROUP_CREATED = \"user_group:created\",\n  USER_GROUP_UPDATED = \"user_group:updated\",\n  USER_GROUP_DELETED = \"user_group:deleted\",\n  USER_GROUP_USERS_ADDED = \"user_group:user_added\",\n  USER_GROUP_USERS_REMOVED = \"user_group:users_deleted\",\n  USER_GROUP_PERMISSIONS_EDITED = \"user_group:permissions_edited\",\n  USER_GROUP_ONBOARDING = \"user_group:onboarding_added\",\n\n  // PLUGIN\n  PLUGIN_INIT = \"plugin:init\",\n  PLUGIN_IMPORTED = \"plugin:imported\",\n  PLUGIN_DELETED = \"plugin:deleted\",\n\n  // BACKUP\n  APP_BACKUP_RESTORED = \"app:backup:restored\",\n  APP_BACKUP_TRIGGERED = \"app:backup:triggered\",\n\n  // ENVIRONMENT VARIABLE\n  ENVIRONMENT_VARIABLE_CREATED = \"environment_variable:created\",\n  ENVIRONMENT_VARIABLE_DELETED = \"environment_variable:deleted\",\n  ENVIRONMENT_VARIABLE_UPGRADE_PANEL_OPENED = \"environment_variable:upgrade_panel_opened\",\n\n  // AUDIT LOG\n  AUDIT_LOGS_FILTERED = \"audit_log:filtered\",\n  AUDIT_LOGS_DOWNLOADED = \"audit_log:downloaded\",\n}\n\nexport const UserGroupSyncEvents: Event[] = [\n  Event.USER_CREATED,\n  Event.USER_UPDATED,\n  Event.USER_DELETED,\n  Event.USER_PERMISSION_ADMIN_ASSIGNED,\n  Event.USER_PERMISSION_ADMIN_REMOVED,\n  Event.USER_PERMISSION_BUILDER_ASSIGNED,\n  Event.USER_PERMISSION_BUILDER_REMOVED,\n  Event.USER_GROUP_CREATED,\n  Event.USER_GROUP_UPDATED,\n  Event.USER_GROUP_DELETED,\n  Event.USER_GROUP_USERS_ADDED,\n  Event.USER_GROUP_USERS_REMOVED,\n  Event.USER_GROUP_PERMISSIONS_EDITED,\n]\n\nexport const AsyncEvents: Event[] = [...UserGroupSyncEvents]\n\n// all events that are not audited have been added to this record as undefined, this means\n// that Typescript can protect us against new events being added and auditing of those\n// events not being considered. This might be a little ugly, but provides a level of\n// Typescript build protection for the audit log feature, any new event also needs to be\n// added to this map, during which the developer will need to consider if it should be\n// a user facing event or not.\nexport const AuditedEventFriendlyName: Record<Event, string | undefined> = {\n  // USER\n  [Event.USER_CREATED]: `User \"{{ email }}\" created{{#if viaScim}} via SCIM{{/if}}`,\n  [Event.USER_UPDATED]: `User \"{{ email }}\" updated{{#if viaScim}} via SCIM{{/if}}`,\n  [Event.USER_DELETED]: `User \"{{ email }}\" deleted{{#if viaScim}} via SCIM{{/if}}`,\n  [Event.USER_PERMISSION_ADMIN_ASSIGNED]: `User \"{{ email }}\" admin role assigned`,\n  [Event.USER_PERMISSION_ADMIN_REMOVED]: `User \"{{ email }}\" admin role removed`,\n  [Event.USER_PERMISSION_BUILDER_ASSIGNED]: `User \"{{ email }}\" builder role assigned`,\n  [Event.USER_PERMISSION_BUILDER_REMOVED]: `User \"{{ email }}\" builder role removed`,\n  [Event.USER_INVITED]: `User \"{{ email }}\" invited`,\n  [Event.USER_INVITED_ACCEPTED]: `User \"{{ email }}\" accepted invite`,\n  [Event.USER_PASSWORD_UPDATED]: `User \"{{ email }}\" password updated`,\n  [Event.USER_PASSWORD_RESET_REQUESTED]: `User \"{{ email }}\" password reset requested`,\n  [Event.USER_PASSWORD_RESET]: `User \"{{ email }}\" password reset`,\n  [Event.USER_GROUP_CREATED]: `User group \"{{ name }}\" created{{#if viaScim}} via SCIM{{/if}}`,\n  [Event.USER_GROUP_UPDATED]: `User group \"{{ name }}\" updated{{#if viaScim}} via SCIM{{/if}}`,\n  [Event.USER_GROUP_DELETED]: `User group \"{{ name }}\" deleted{{#if viaScim}} via SCIM{{/if}}`,\n  [Event.USER_GROUP_USERS_ADDED]: `User group \"{{ name }}\" {{ count }} users added{{#if viaScim}} via SCIM{{/if}}`,\n  [Event.USER_GROUP_USERS_REMOVED]: `User group \"{{ name }}\" {{ count }} users removed{{#if viaScim}} via SCIM{{/if}}`,\n  [Event.USER_GROUP_PERMISSIONS_EDITED]: `User group \"{{ name }}\" permissions edited`,\n  [Event.USER_PASSWORD_FORCE_RESET]: undefined,\n  [Event.USER_GROUP_ONBOARDING]: undefined,\n  [Event.USER_ONBOARDING_COMPLETE]: undefined,\n  [Event.USER_DATA_COLLABORATION]: undefined,\n\n  // EMAIL\n  [Event.EMAIL_SMTP_CREATED]: `Email configuration created`,\n  [Event.EMAIL_SMTP_UPDATED]: `Email configuration updated`,\n\n  // AUTH\n  [Event.AUTH_SSO_CREATED]: `SSO configuration created`,\n  [Event.AUTH_SSO_UPDATED]: `SSO configuration updated`,\n  [Event.AUTH_SSO_ACTIVATED]: `SSO configuration activated`,\n  [Event.AUTH_SSO_DEACTIVATED]: `SSO configuration deactivated`,\n  [Event.AUTH_LOGIN]: `User \"{{ email }}\" logged in`,\n  [Event.AUTH_LOGOUT]: `User \"{{ email }}\" logged out`,\n\n  // ORG\n  [Event.ORG_NAME_UPDATED]: `Organisation name updated`,\n  [Event.ORG_LOGO_UPDATED]: `Organisation logo updated`,\n  [Event.ORG_PLATFORM_URL_UPDATED]: `Organisation platform URL updated`,\n\n  // APP\n  [Event.APP_CREATED]: `App \"{{ name }}\" created`,\n  [Event.APP_UPDATED]: `App \"{{ name }}\" updated`,\n  [Event.APP_DELETED]: `App \"{{ name }}\" deleted`,\n  [Event.APP_PUBLISHED]: `App \"{{ name }}\" published`,\n  [Event.APP_UNPUBLISHED]: `App \"{{ name }}\" unpublished`,\n  [Event.APP_TEMPLATE_IMPORTED]: `App \"{{ name }}\" template imported`,\n  [Event.APP_FILE_IMPORTED]: `App \"{{ name }}\" file imported`,\n  [Event.APP_VERSION_UPDATED]: `App \"{{ name }}\" version updated`,\n  [Event.APP_VERSION_REVERTED]: `App \"{{ name }}\" version reverted`,\n  [Event.APP_REVERTED]: `App \"{{ name }}\" reverted`,\n  [Event.APP_EXPORTED]: `App \"{{ name }}\" exported`,\n  [Event.APP_BACKUP_RESTORED]: `App backup \"{{ name }}\" restored`,\n  [Event.APP_BACKUP_TRIGGERED]: `App backup \"{{ name }}\" triggered`,\n\n  // DATASOURCE\n  [Event.DATASOURCE_CREATED]: `Datasource created`,\n  [Event.DATASOURCE_UPDATED]: `Datasource updated`,\n  [Event.DATASOURCE_DELETED]: `Datasource deleted`,\n\n  // QUERY\n  [Event.QUERY_CREATED]: `Query created`,\n  [Event.QUERY_UPDATED]: `Query updated`,\n  [Event.QUERY_DELETED]: `Query deleted`,\n  [Event.QUERY_IMPORT]: `Query import`,\n  [Event.QUERIES_RUN]: undefined,\n  [Event.QUERY_PREVIEWED]: undefined,\n\n  // TABLE\n  [Event.TABLE_CREATED]: `Table \"{{ name }}\" created`,\n  [Event.TABLE_UPDATED]: `Table \"{{ name }}\" updated`,\n  [Event.TABLE_DELETED]: `Table \"{{ name }}\" deleted`,\n  [Event.TABLE_EXPORTED]: `Table \"{{ name }}\" exported`,\n  [Event.TABLE_IMPORTED]: `Table \"{{ name }}\" imported`,\n  [Event.TABLE_DATA_IMPORTED]: `Data imported to table`,\n\n  // ROWS\n  [Event.ROWS_CREATED]: `Rows created`,\n  [Event.ROWS_IMPORTED]: `Rows imported`,\n\n  // AUTOMATION\n  [Event.AUTOMATION_CREATED]: `Automation \"{{ name }}\" created`,\n  [Event.AUTOMATION_DELETED]: `Automation \"{{ name }}\" deleted`,\n  [Event.AUTOMATION_STEP_CREATED]: `Automation \"{{ name }}\" step added`,\n  [Event.AUTOMATION_STEP_DELETED]: `Automation \"{{ name }}\" step removed`,\n  [Event.AUTOMATION_TESTED]: undefined,\n  [Event.AUTOMATIONS_RUN]: undefined,\n  [Event.AUTOMATION_TRIGGER_UPDATED]: undefined,\n\n  // SCREEN\n  [Event.SCREEN_CREATED]: `Screen \"{{ name }}\" created`,\n  [Event.SCREEN_DELETED]: `Screen \"{{ name }}\" deleted`,\n\n  // COMPONENT\n  [Event.COMPONENT_CREATED]: `Component created`,\n  [Event.COMPONENT_DELETED]: `Component deleted`,\n\n  // ENVIRONMENT VARIABLE\n  [Event.ENVIRONMENT_VARIABLE_CREATED]: `Environment variable created`,\n  [Event.ENVIRONMENT_VARIABLE_DELETED]: `Environment variable deleted`,\n  [Event.ENVIRONMENT_VARIABLE_UPGRADE_PANEL_OPENED]: undefined,\n\n  // PLUGIN\n  [Event.PLUGIN_IMPORTED]: `Plugin imported`,\n  [Event.PLUGIN_DELETED]: `Plugin deleted`,\n  [Event.PLUGIN_INIT]: undefined,\n\n  // ROLE - NOT AUDITED\n  [Event.ROLE_CREATED]: undefined,\n  [Event.ROLE_UPDATED]: undefined,\n  [Event.ROLE_DELETED]: undefined,\n  [Event.ROLE_ASSIGNED]: undefined,\n  [Event.ROLE_UNASSIGNED]: undefined,\n\n  // LICENSE - NOT AUDITED\n  [Event.LICENSE_PLAN_CHANGED]: undefined,\n  [Event.LICENSE_ACTIVATED]: undefined,\n  [Event.LICENSE_PAYMENT_FAILED]: undefined,\n  [Event.LICENSE_PAYMENT_RECOVERED]: undefined,\n  [Event.LICENSE_CHECKOUT_OPENED]: undefined,\n  [Event.LICENSE_CHECKOUT_SUCCESS]: undefined,\n  [Event.LICENSE_PORTAL_OPENED]: undefined,\n\n  // ACCOUNT - NOT AUDITED\n  [Event.ACCOUNT_CREATED]: undefined,\n  [Event.ACCOUNT_DELETED]: undefined,\n  [Event.ACCOUNT_VERIFIED]: undefined,\n\n  // BACKFILL - NOT AUDITED\n  [Event.APP_BACKFILL_SUCCEEDED]: undefined,\n  [Event.APP_BACKFILL_FAILED]: undefined,\n  [Event.TENANT_BACKFILL_SUCCEEDED]: undefined,\n  [Event.TENANT_BACKFILL_FAILED]: undefined,\n  [Event.INSTALLATION_BACKFILL_SUCCEEDED]: undefined,\n  [Event.INSTALLATION_BACKFILL_FAILED]: undefined,\n\n  // LAYOUT - NOT AUDITED\n  [Event.LAYOUT_CREATED]: undefined,\n  [Event.LAYOUT_DELETED]: undefined,\n\n  // VIEW - NOT AUDITED\n  [Event.VIEW_CREATED]: undefined,\n  [Event.VIEW_UPDATED]: undefined,\n  [Event.VIEW_DELETED]: undefined,\n  [Event.VIEW_EXPORTED]: undefined,\n  [Event.VIEW_FILTER_CREATED]: undefined,\n  [Event.VIEW_FILTER_UPDATED]: undefined,\n  [Event.VIEW_FILTER_DELETED]: undefined,\n  [Event.VIEW_CALCULATION_CREATED]: undefined,\n  [Event.VIEW_CALCULATION_UPDATED]: undefined,\n  [Event.VIEW_CALCULATION_DELETED]: undefined,\n\n  // SERVED - NOT AUDITED\n  [Event.SERVED_BUILDER]: undefined,\n  [Event.SERVED_APP]: undefined,\n  [Event.SERVED_APP_PREVIEW]: undefined,\n\n  // ANALYTICS - NOT AUDITED\n  [Event.ANALYTICS_OPT_OUT]: undefined,\n  [Event.ANALYTICS_OPT_IN]: undefined,\n\n  // INSTALLATION - NOT AUDITED\n  [Event.INSTALLATION_VERSION_CHECKED]: undefined,\n  [Event.INSTALLATION_VERSION_UPGRADED]: undefined,\n  [Event.INSTALLATION_VERSION_DOWNGRADED]: undefined,\n  [Event.INSTALLATION_FIRST_STARTUP]: undefined,\n\n  // AUDIT LOG - NOT AUDITED\n  [Event.AUDIT_LOGS_FILTERED]: undefined,\n  [Event.AUDIT_LOGS_DOWNLOADED]: undefined,\n}\n\n// properties added at the final stage of the event pipeline\nexport interface BaseEvent {\n  version?: string\n  service?: string\n  environment?: string\n  appId?: string\n  installationId?: string\n  tenantId?: string\n  hosting?: Hosting\n  // any props in the audited section will be removed before passing events\n  // up out of system (purely for use with auditing)\n  audited?: {\n    [key: string]: any\n  }\n}\n\nexport type TableExportFormat = \"json\" | \"csv\"\n\nexport type DocUpdateEvent = {\n  id: string\n  tenantId: string\n  appId?: string\n}\n\nexport interface EventProcessor {\n  processEvent(\n    event: Event,\n    identity: Identity,\n    properties: any,\n    timestamp?: string | number\n  ): Promise<void>\n  identify?(identity: Identity, timestamp?: string | number): Promise<void>\n  identifyGroup?(group: Group, timestamp?: string | number): Promise<void>\n  shutdown?(): void\n}\n", "import { Event } from \"../events\"\n\nexport enum CommandWord {\n  BACKUPS = \"backups\",\n  HOSTING = \"hosting\",\n  ANALYTICS = \"analytics\",\n  HELP = \"help\",\n  PLUGIN = \"plugins\",\n}\n\nexport enum InitType {\n  QUICK = \"quick\",\n  DIGITAL_OCEAN = \"do\",\n}\n\nexport const AnalyticsEvent = {\n  OptOut: \"analytics:opt:out\",\n  OptIn: \"analytics:opt:in\",\n  SelfHostInit: \"hosting:init\",\n  PluginInit: Event.PLUGIN_INIT,\n}\n", "import { Document } from \"../document\"\nimport { EventEmitter } from \"events\"\nimport { User } from \"../global\"\n\nexport enum AutomationIOType {\n  OBJECT = \"object\",\n  STRING = \"string\",\n  BOOLEAN = \"boolean\",\n  NUMBER = \"number\",\n  ARRAY = \"array\",\n  JSON = \"json\",\n  DATE = \"date\",\n}\n\nexport enum AutomationCustomIOType {\n  TABLE = \"table\",\n  ROW = \"row\",\n  ROWS = \"rows\",\n  WIDE = \"wide\",\n  QUERY = \"query\",\n  QUERY_PARAMS = \"queryParams\",\n  QUERY_LIMIT = \"queryLimit\",\n  LOOP_OPTION = \"loopOption\",\n  ITEM = \"item\",\n  CODE = \"code\",\n  FILTERS = \"filters\",\n  COLUMN = \"column\",\n  TRIGGER_SCHEMA = \"triggerSchema\",\n  CRON = \"cron\",\n  WEBHOOK_URL = \"webhookUrl\",\n}\n\nexport enum AutomationTriggerStepId {\n  ROW_SAVED = \"ROW_SAVED\",\n  ROW_UPDATED = \"ROW_UPDATED\",\n  ROW_DELETED = \"ROW_DELETED\",\n  WEBHOOK = \"WEBHOOK\",\n  APP = \"APP\",\n  CRON = \"CRON\",\n}\n\nexport enum AutomationStepType {\n  LOGIC = \"LOGIC\",\n  ACTION = \"ACTION\",\n  TRIGGER = \"TRIGGER\",\n}\n\nexport enum AutomationActionStepId {\n  SEND_EMAIL_SMTP = \"SEND_EMAIL_SMTP\",\n  CREATE_ROW = \"CREATE_ROW\",\n  UPDATE_ROW = \"UPDATE_ROW\",\n  DELETE_ROW = \"DELETE_ROW\",\n  EXECUTE_BASH = \"EXECUTE_BASH\",\n  OUTGOING_WEBHOOK = \"OUTGOING_WEBHOOK\",\n  EXECUTE_SCRIPT = \"EXECUTE_SCRIPT\",\n  EXECUTE_QUERY = \"EXECUTE_QUERY\",\n  SERVER_LOG = \"SERVER_LOG\",\n  DELAY = \"DELAY\",\n  FILTER = \"FILTER\",\n  QUERY_ROWS = \"QUERY_ROWS\",\n  LOOP = \"LOOP\",\n  COLLECT = \"COLLECT\",\n  OPENAI = \"OPENAI\",\n  // these used to be lowercase step IDs, maintain for backwards compat\n  discord = \"discord\",\n  slack = \"slack\",\n  zapier = \"zapier\",\n  integromat = \"integromat\",\n}\n\nexport interface EmailInvite {\n  startTime: Date\n  endTime: Date\n  summary: string\n  location?: string\n  url?: string\n}\n\nexport interface SendEmailOpts {\n  // workspaceId If finer grain controls being used then this will lookup config for workspace.\n  workspaceId?: string\n  // user If sending to an existing user the object can be provided, this is used in the context.\n  user: User\n  // from If sending from an address that is not what is configured in the SMTP config.\n  from?: string\n  // contents If sending a custom email then can supply contents which will be added to it.\n  contents?: string\n  // subject A custom subject can be specified if the config one is not desired.\n  subject?: string\n  // info Pass in a structure of information to be stored alongside the invitation.\n  info?: any\n  cc?: boolean\n  bcc?: boolean\n  automation?: boolean\n  invite?: EmailInvite\n}\n\nexport const AutomationStepIdArray = [\n  ...Object.values(AutomationActionStepId),\n  ...Object.values(AutomationTriggerStepId),\n]\n\nexport interface Automation extends Document {\n  definition: {\n    steps: AutomationStep[]\n    trigger: AutomationTrigger\n  }\n  screenId?: string\n  uiTree?: any\n  appId: string\n  live?: boolean\n  name: string\n  internal?: boolean\n  type?: string\n}\n\ninterface BaseIOStructure {\n  type?: AutomationIOType\n  customType?: AutomationCustomIOType\n  title?: string\n  description?: string\n  dependsOn?: string\n  enum?: string[]\n  pretty?: string[]\n  properties?: {\n    [key: string]: BaseIOStructure\n  }\n  required?: string[]\n}\n\ninterface InputOutputBlock {\n  properties: {\n    [key: string]: BaseIOStructure\n  }\n  required?: string[]\n}\n\nexport interface AutomationStepSchema {\n  name: string\n  stepTitle?: string\n  tagline: string\n  icon: string\n  description: string\n  type: AutomationStepType\n  internal?: boolean\n  deprecated?: boolean\n  stepId: AutomationTriggerStepId | AutomationActionStepId\n  blockToLoop?: string\n  inputs: {\n    [key: string]: any\n  }\n  schema: {\n    inputs: InputOutputBlock\n    outputs: InputOutputBlock\n  }\n  custom?: boolean\n  features?: Partial<Record<AutomationFeature, boolean>>\n}\n\nexport enum AutomationFeature {\n  LOOPING = \"LOOPING\",\n}\n\nexport interface AutomationStep extends AutomationStepSchema {\n  id: string\n}\n\nexport interface AutomationTriggerSchema extends AutomationStepSchema {\n  event?: string\n  cronJobId?: string\n}\n\nexport interface AutomationTrigger extends AutomationTriggerSchema {\n  id: string\n}\n\nexport enum AutomationStepStatus {\n  NO_ITERATIONS = \"no_iterations\",\n}\n\nexport enum AutomationStatus {\n  SUCCESS = \"success\",\n  ERROR = \"error\",\n  STOPPED = \"stopped\",\n  STOPPED_ERROR = \"stopped_error\",\n}\n\nexport interface AutomationResults {\n  automationId?: string\n  status?: AutomationStatus\n  trigger?: any\n  steps: {\n    stepId: AutomationTriggerStepId | AutomationActionStepId\n    inputs: {\n      [key: string]: any\n    }\n    outputs: {\n      [key: string]: any\n    }\n  }[]\n}\n\nexport interface AutomationLog extends AutomationResults, Document {\n  automationName: string\n  _rev?: string\n}\n\nexport interface AutomationLogPage {\n  data: AutomationLog[]\n  hasNextPage: boolean\n  nextPage?: string\n}\n\nexport type AutomationStepInput = {\n  inputs: Record<string, any>\n  context: Record<string, any>\n  emitter: EventEmitter\n  appId: string\n  apiKey?: string\n}\n\nexport interface AutomationMetadata extends Document {\n  errorCount?: number\n  automationChainCount?: number\n}\n", "export const SEPARATOR = \"_\"\nexport const UNICODE_MAX = \"\\ufff0\"\n\nexport const prefixed = (type: DocumentType) => `${type}${SEPARATOR}`\n\nexport enum DocumentType {\n  USER = \"us\",\n  GROUP = \"gr\",\n  WORKSPACE = \"workspace\",\n  CONFIG = \"config\",\n  TEMPLATE = \"template\",\n  APP = \"app\",\n  DEV = \"dev\",\n  APP_DEV = \"app_dev\",\n  APP_METADATA = \"app_metadata\",\n  ROLE = \"role\",\n  MIGRATIONS = \"migrations\",\n  DEV_INFO = \"devinfo\",\n  AUTOMATION_LOG = \"log_au\",\n  ACCOUNT_METADATA = \"acc_metadata\",\n  PLUGIN = \"plg\",\n  DATASOURCE = \"datasource\",\n  DATASOURCE_PLUS = \"datasource_plus\",\n  APP_BACKUP = \"backup\",\n  TABLE = \"ta\",\n  ROW = \"ro\",\n  AUTOMATION = \"au\",\n  LINK = \"li\",\n  WEBHOOK = \"wh\",\n  INSTANCE = \"inst\",\n  LAYOUT = \"layout\",\n  SCREEN = \"screen\",\n  QUERY = \"query\",\n  DEPLOYMENTS = \"deployments\",\n  METADATA = \"metadata\",\n  MEM_VIEW = \"view\",\n  USER_FLAG = \"flag\",\n  AUTOMATION_METADATA = \"meta_au\",\n  AUDIT_LOG = \"al\",\n}\n\n// these are the core documents that make up the data, design\n// and automation sections of an app. This excludes any internal\n// rows as we shouldn't import data.\nexport const DocumentTypesToImport: DocumentType[] = [\n  DocumentType.ROLE,\n  DocumentType.DATASOURCE,\n  DocumentType.DATASOURCE_PLUS,\n  DocumentType.TABLE,\n  DocumentType.AUTOMATION,\n  DocumentType.WEBHOOK,\n  DocumentType.SCREEN,\n  DocumentType.QUERY,\n  DocumentType.METADATA,\n  DocumentType.MEM_VIEW,\n  // Deprecated but still copied\n  DocumentType.INSTANCE,\n  DocumentType.LAYOUT,\n]\n\nexport enum InternalTable {\n  USER_METADATA = \"ta_users\",\n}\n\n// these documents don't really exist, they are part of other\n// documents or enriched into existence as part of get requests\nexport enum VirtualDocumentType {\n  VIEW = \"view\",\n}\n\nexport interface Document {\n  _id?: string\n  _rev?: string\n  createdAt?: string | number\n  updatedAt?: string\n}\n\nexport interface AnyDocument extends Document {\n  [key: string]: any\n}\n", "import { Document } from \"../document\"\n\nexport enum PluginType {\n  DATASOURCE = \"datasource\",\n  COMPONENT = \"component\",\n  AUTOMATION = \"automation\",\n}\n\nexport enum PluginSource {\n  NPM = \"NPM\",\n  GITHUB = \"Github\",\n  URL = \"URL\",\n  FILE = \"File Upload\",\n}\nexport interface FileType {\n  path: string\n  name: string\n}\n\nexport interface Plugin extends Document {\n  description: string\n  name: string\n  version: string\n  source: PluginSource\n  package: { [key: string]: any }\n  hash: string\n  schema: {\n    type: PluginType\n    [key: string]: any\n  }\n  iconFileName?: string\n  // Populated on read\n  jsUrl?: string\n  // Populated on read\n  iconUrl?: string\n}\n\nexport const PLUGIN_TYPE_ARR = Object.values(PluginType)\n", "import { MonthlyQuotaName, StaticQuotaName } from \"../../sdk\"\n\nexport enum BreakdownQuotaName {\n  ROW_QUERIES = \"rowQueries\",\n  DATASOURCE_QUERIES = \"datasourceQueries\",\n  AUTOMATIONS = \"automations\",\n}\n\nexport const APP_QUOTA_NAMES = [\n  StaticQuotaName.ROWS,\n  MonthlyQuotaName.QUERIES,\n  MonthlyQuotaName.AUTOMATIONS,\n]\n\nexport const BREAKDOWN_QUOTA_NAMES = [\n  MonthlyQuotaName.QUERIES,\n  MonthlyQuotaName.AUTOMATIONS,\n]\n\nexport interface UsageBreakdown {\n  parent: MonthlyQuotaName\n  values: {\n    [key: string]: number\n  }\n}\n\nexport type QuotaTriggers = {\n  [key: string]: string | undefined\n}\n\nexport interface StaticUsage {\n  [StaticQuotaName.APPS]: number\n  [StaticQuotaName.PLUGINS]: number\n  [StaticQuotaName.USERS]: number\n  [StaticQuotaName.USER_GROUPS]: number\n  [StaticQuotaName.ROWS]: number\n  triggers: {\n    [key in StaticQuotaName]?: QuotaTriggers\n  }\n}\n\nexport interface MonthlyUsage {\n  [MonthlyQuotaName.QUERIES]: number\n  [MonthlyQuotaName.AUTOMATIONS]: number\n  [MonthlyQuotaName.DAY_PASSES]: number\n  triggers: {\n    [key in MonthlyQuotaName]?: QuotaTriggers\n  }\n  breakdown?: {\n    [key in BreakdownQuotaName]?: UsageBreakdown\n  }\n}\n\nexport interface BaseQuotaUsage {\n  usageQuota: StaticUsage\n  monthly: {\n    [key: string]: MonthlyUsage\n  }\n}\n\nexport interface QuotaUsage extends BaseQuotaUsage {\n  _id: string\n  _rev?: string\n  quotaReset: string\n  apps?: {\n    [key: string]: BaseQuotaUsage\n  }\n}\n\nexport type SetUsageValues = {\n  total: number\n  app?: number\n  breakdown?: number\n  triggers?: QuotaTriggers\n}\n\nexport type UsageValues = {\n  total: number\n  app?: number\n  breakdown?: number\n}\n", "export * from \"./helpers\"\nexport * from \"./integrations\"\n", "import { User } from \"@budibase/types\"\n\n/**\n * Gets a key within an object. The key supports dot syntax for retrieving deep\n * fields - e.g. \"a.b.c\".\n * Exact matches of keys with dots in them take precedence over nested keys of\n * the same path - e.g. getting \"a.b\" from { \"a.b\": \"foo\", a: { b: \"bar\" } }\n * will return \"foo\" over \"bar\".\n * @param obj the object\n * @param key the key\n * @return {*|null} the value or null if a value was not found for this key\n */\nexport const deepGet = (obj: { [x: string]: any }, key: string) => {\n  if (!obj || !key) {\n    return null\n  }\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key]\n  }\n  const split = key.split(\".\")\n  for (let i = 0; i < split.length; i++) {\n    obj = obj?.[split[i]]\n  }\n  return obj\n}\n\n/**\n * Gets the initials to show in a user avatar.\n * @param user the user\n */\nexport const getUserInitials = (user: User) => {\n  if (!user) {\n    return \"?\"\n  }\n  let initials = \"\"\n  initials += user.firstName ? user.firstName[0] : \"\"\n  initials += user.lastName ? user.lastName[0] : \"\"\n  if (initials !== \"\") {\n    return initials\n  }\n  return user.email?.[0] || \"U\"\n}\n\n/**\n * Gets a deterministic colour for a particular user\n * @param user the user\n */\nexport const getUserColor = (user: User) => {\n  let id = user?._id\n  if (!id) {\n    return \"var(--spectrum-global-color-blue-400)\"\n  }\n\n  // In order to generate the same color for global users as app users, we need\n  // to remove the app-specific table prefix\n  id = id.replace(\"ro_ta_users_\", \"\")\n\n  // Generate a hue based on the ID\n  let hue = 1\n  for (let i = 0; i < id.length; i++) {\n    hue += id.charCodeAt(i)\n    hue = hue % 36\n  }\n  return `hsl(${hue * 10}, 50%, 40%)`\n}\n\n/**\n * Gets a friendly label to describe who a user is.\n * @param user the user\n */\nexport const getUserLabel = (user: User) => {\n  if (!user) {\n    return \"\"\n  }\n  const { firstName, lastName, email } = user\n  if (firstName && lastName) {\n    return `${firstName} ${lastName}`\n  } else if (firstName) {\n    return firstName\n  } else if (lastName) {\n    return lastName\n  } else {\n    return email\n  }\n}\n", "import { Datasource, SourceName } from \"@budibase/types\"\n\nexport function isGoogleSheets(type: SourceName) {\n  return type === SourceName.GOOGLE_SHEETS\n}\n\nexport function isSQL(datasource: Datasource): boolean {\n  if (!datasource || !datasource.source) {\n    return false\n  }\n  const SQL = [\n    SourceName.POSTGRES,\n    SourceName.SQL_SERVER,\n    SourceName.MYSQL,\n    SourceName.ORACLE,\n  ]\n  return SQL.indexOf(datasource.source) !== -1 || datasource.isSQL === true\n}\n", "export function unreachable(\n  value: never,\n  message = `No such case in exhaustive switch: ${value}`\n) {\n  throw new Error(message)\n}\n\nexport async function parallelForeach<T>(\n  items: T[],\n  task: (item: T) => Promise<void>,\n  maxConcurrency: number\n): Promise<void> {\n  const promises: Promise<void>[] = []\n  let index = 0\n\n  const processItem = async (item: T) => {\n    try {\n      await task(item)\n    } finally {\n      processNext()\n    }\n  }\n\n  const processNext = () => {\n    if (index >= items.length) {\n      // No more items to process\n      return\n    }\n\n    const item = items[index]\n    index++\n\n    const promise = processItem(item)\n    promises.push(promise)\n\n    if (promises.length >= maxConcurrency) {\n      Promise.race(promises).then(processNext)\n    } else {\n      processNext()\n    }\n  }\n  processNext()\n\n  await Promise.all(promises)\n}\n", "export * from \"./documents\"\n", "import { DocumentType, prefixed } from \"@budibase/types\"\n\nconst APP_PREFIX = prefixed(DocumentType.APP)\nconst APP_DEV_PREFIX = prefixed(DocumentType.APP_DEV)\n\nexport function getDevAppID(appId: string) {\n  if (!appId) {\n    throw new Error(\"No app ID provided\")\n  }\n  if (appId.startsWith(APP_DEV_PREFIX)) {\n    return appId\n  }\n  // split to take off the app_ element, then join it together incase any other app_ exist\n  const split = appId.split(APP_PREFIX)\n  split.shift()\n  const rest = split.join(APP_PREFIX)\n  return `${APP_DEV_PREFIX}${rest}`\n}\n\n/**\n * Convert a development app ID to a deployed app ID.\n */\nexport function getProdAppID(appId: string) {\n  if (!appId) {\n    throw new Error(\"No app ID provided\")\n  }\n  if (!appId.startsWith(APP_DEV_PREFIX)) {\n    return appId\n  }\n  // split to take off the app_dev element, then join it together incase any other app_ exist\n  const split = appId.split(APP_DEV_PREFIX)\n  split.shift()\n  const rest = split.join(APP_DEV_PREFIX)\n  return `${APP_PREFIX}${rest}`\n}\n", "import {\n  ContextUser,\n  DocumentType,\n  SEPARATOR,\n  User,\n  InternalTable,\n} from \"@budibase/types\"\nimport { getProdAppID } from \"./applications\"\n\n// checks if a user is specifically a builder, given an app ID\nexport function isBuilder(user: User | ContextUser, appId?: string): boolean {\n  if (!user) {\n    return false\n  }\n  if (user.builder?.global) {\n    return true\n  } else if (appId && user.builder?.apps?.includes(getProdAppID(appId))) {\n    return true\n  }\n  return false\n}\n\nexport function isGlobalBuilder(user: User | ContextUser): boolean {\n  return (isBuilder(user) && !hasAppBuilderPermissions(user)) || isAdmin(user)\n}\n\n// alias for hasAdminPermission, currently do the same thing\n// in future whether someone has admin permissions and whether they are\n// an admin for a specific resource could be separated\nexport function isAdmin(user: User | ContextUser): boolean {\n  if (!user) {\n    return false\n  }\n  return hasAdminPermissions(user)\n}\n\nexport function isAdminOrBuilder(\n  user: User | ContextUser,\n  appId?: string\n): boolean {\n  return isBuilder(user, appId) || isAdmin(user)\n}\n\nexport function isAdminOrGlobalBuilder(\n  user: User | ContextUser,\n  appId?: string\n): boolean {\n  return isGlobalBuilder(user) || isAdmin(user)\n}\n\n// check if they are a builder within an app (not necessarily a global builder)\nexport function hasAppBuilderPermissions(user?: User | ContextUser): boolean {\n  if (!user) {\n    return false\n  }\n  const appLength = user.builder?.apps?.length\n  const isGlobalBuilder = !!user.builder?.global\n  return !isGlobalBuilder && appLength != null && appLength > 0\n}\n\n// checks if a user is capable of building any app\nexport function hasBuilderPermissions(user?: User | ContextUser): boolean {\n  if (!user) {\n    return false\n  }\n  return user.builder?.global || hasAppBuilderPermissions(user)\n}\n\n// checks if a user is capable of being an admin\nexport function hasAdminPermissions(user?: User | ContextUser): boolean {\n  if (!user) {\n    return false\n  }\n  return !!user.admin?.global\n}\n\nexport function getGlobalUserID(userId?: string): string | undefined {\n  if (typeof userId !== \"string\") {\n    return userId\n  }\n  const prefix = `${DocumentType.ROW}${SEPARATOR}${InternalTable.USER_METADATA}${SEPARATOR}`\n  if (!userId.startsWith(prefix)) {\n    return userId\n  }\n  return userId.split(prefix)[1]\n}\n\nexport function containsUserID(value: string | undefined): boolean {\n  if (typeof value !== \"string\") {\n    return false\n  }\n  return value.includes(`${DocumentType.USER}${SEPARATOR}`)\n}\n", "import { FieldType } from \"@budibase/types\"\n\nconst allowDisplayColumnByType: Record<FieldType, boolean> = {\n  [FieldType.STRING]: true,\n  [FieldType.LONGFORM]: true,\n  [FieldType.OPTIONS]: true,\n  [FieldType.NUMBER]: true,\n  [FieldType.DATETIME]: true,\n  [FieldType.FORMULA]: true,\n  [FieldType.AUTO]: true,\n  [FieldType.INTERNAL]: true,\n  [FieldType.BARCODEQR]: true,\n  [FieldType.BIGINT]: true,\n\n  [FieldType.BOOLEAN]: false,\n  [FieldType.ARRAY]: false,\n  [FieldType.ATTACHMENT]: false,\n  [FieldType.LINK]: false,\n  [FieldType.JSON]: false,\n  [FieldType.BB_REFERENCE]: false,\n}\n\nexport function canBeDisplayColumn(type: FieldType): boolean {\n  return !!allowDisplayColumnByType[type]\n}\n"],
  "mappings": "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",
  "names": ["SocketEvent", "GridSocketEvent", "BuilderSocketEvent", "AutomationTriggerStepId", "AutomationActionStepId", "PluginType", "isGlobalBuilder"]
}
