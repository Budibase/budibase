{
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
        "source.fixAll": true
    },
    "editor.defaultFormatter": "svelte.svelte-vscode",
    "i18n-ally.enabledFrameworks": [
        "svelte"
    ],
    "i18n-ally.keystyle": "nested",
    "i18n-ally.namespace": true,
    "i18n-ally.sortKeys": true,
    "i18n-ally.sourceLanguage": "en-us",
    "i18n-ally.displayLanguage": "zh-hans",
    "i18n-ally.extract.autoDetect": true,
    "i18n-ally.localesPaths": [
      "packages/builder/assets/lang"
    ],
    "i18n-ally.extract.ignoredByFiles": {
      "src/pages/builder/admin/index.svelte": [
        " {\n              admin.unload()\n              $goto(\"../auth/org\")\n            }}\n          >\n            Change organisation\n          ",
        " {\n              admin.unload()\n              $goto(\"../auth/org\")\n            }}\n          >\n            Change organisation\n          "
      ],
      "src/pages/builder/auth/login.svelte": [
        "Sign in to {company}",
        " {\n              admin.unload()\n              $goto(\"./org\")\n            }}\n          >\n            Change organisation\n          "
      ],
      "src/pages/builder/auth/_components/GoogleButton.svelte": [
        "\n      window.open(`/api/global/auth/${tenantId}/google`, \"_blank\")}\n  >\n    "
      ],
      "src/pages/builder/portal/settings/theming.svelte": [
        "& { $t('language') }"
      ],
      "src/pages/builder/portal/settings/update.svelte": [
        "Bearer budibase",
        "Bearer budibase",
        "Error installing budibase update ${err}"
      ],
      "src/pages/builder/portal/settings/organisation.svelte": [
        "Logo",
        "Logo",
        " {\n              if (!e.detail || e.detail.length === 0) {\n                $values.logo = null\n              } else {\n                $values.logo = e.detail[0]\n              }\n            }}\n          />\n        "
      ],
      "src/pages/builder/portal/apps/index.svelte": [
        "App locked by ${app.lockedBy.email}. Please allow lock to expire or have them unlock this app.",
        "App locked by ${app.lockedBy.email}. Please allow lock to expire or have them unlock this app.",
        " ${app.lockedBy.email}. Please allow lock to expire or have them unlock this app.",
        "/api/backups/export?appId=${id}&appname=${encodeURIComponent(\n          app.name\n        )}",
        "Error unpublishing app: ${err}",
        "Error deleting app: ${err}",
        "Error releasing lock: ${err}",
        "& enrichedApps.length}\n    ",
        " (layout = \"grid\")}\n            selected={layout === \"grid\"}\n            quiet\n            icon=\"ClassicGridView\"\n          />\n          ",
        " (layout = \"table\")}\n            selected={layout === \"table\"}\n            quiet\n            icon=\"ViewRow\"\n          />\n        ",
        "\n  {/if}\n  {#if !enrichedApps.length ",
        "& !creatingApp ",
        "& loaded}\n    ",
        "\n  {#if loaded ",
        "&",
        "?\n"
      ],
      "src/pages/builder/portal/manage/auth/index.svelte": [
        "Failed to update auth settings. ${err}",
        "Failed to update auth settings. ${err}",
        "Please fill in all required ${ConfigTypes.Google} fields"
      ],
      "src/pages/builder/portal/manage/email/[template].svelte": [
        "Failed to update template settings. ${err}",
        " $goto(\"./\")}\n      quiet\n      size=\"S\"\n      icon=\"BackAndroid\"\n    >\n      Back to email settings\n    ",
        "\n      Email Template: {name}\n    "
      ],
      "src/pages/builder/portal/manage/email/index.svelte": [
        "Failed to save email settings, reason: ${message}",
        "Failed to save email settings, reason: ${message}"
      ],
      "src/pages/builder/portal/manage/users/[userId].svelte": [
        "User ${$userFetch?.data?.email} deleted.",
        "User ${$userFetch?.data?.email} deleted.",
        " $goto(\"./\")}\n        quiet\n        size=\"S\"\n        icon=\"BackAndroid\"\n      >\n        Back to users\n      ",
        "User: {$userFetch?.data?.email}"
      ],
      "src/pages/builder/portal/manage/users/_components/UpdateRolesModal.svelte": [
        "\n    Update {user.email}'s role for ",
        "\n    Update {user.email}'s role for ",
        "\n    { $t('update') } {user.email}'s role for "
      ],
      "src/pages/builder/portal/manage/users/_components/TagsTableRenderer.svelte": [
        "+{leftover} more",
        "+{leftover} more"
      ],
      "src/pages/builder/portal/_layout.svelte": [
        " changePasswordModal.show()}\n          >\n            Update password\n          ",
        " changePasswordModal.show()}\n          >\n            Update password\n          "
      ],
      "src/components/start/UpdateAppModal.svelte": [
        " ($touched.name = true)}\n      on:change={() => (dirty = true)}\n      label=\"Name\"\n    />\n  ",
        " ($touched.name = true)}\n      on:change={() => (dirty = true)}\n      label=\"Name\"\n    />\n  "
      ],
      "src/pages/builder/apps/index.svelte": [
        "\n                Hey {$auth.user.firstName || $auth.user.email}\n              ",
        "\n                Hey {$auth.user.firstName || $auth.user.email}\n              ",
        "\n                Welcome to the {$organisation.company} portal. Below you'll find\n                the list of apps that you have access to.\n              ",
        "\n                { $t('welcome-to-the') } {$organisation.company} portal. Below you'll find\n                the list of apps that you have access to.\n              ",
        " changePasswordModal.show()}\n              >\n                Update password\n              ",
        " $goto(\"../portal\")}\n                >\n                  Open developer mode\n                "
      ],
      "src/pages/builder/app/[application]/_layout.svelte": [
        "Something went wrong: {error.message}",
        "Something went wrong: {error.message}"
      ],
      "src/components/start/TemplateList.svelte": [
        "\n              Create\n              {template.name}\n            ",
        "\n              Create\n              {template.name}\n            "
      ],
      "src/components/start/AppRow.svelte": [
        " editApp(app)}\n    size=\"S\"\n    secondary>Open",
        " editApp(app)}\n    size=\"S\"\n    secondary>Open"
      ],
      "src/pages/builder/app/[application]/data/datasource/bb_internal/index.svelte": [
        "Display column: {table.primaryDisplay}",
        "Display column: {table.primaryDisplay}"
      ],
      "src/pages/builder/app/[application]/data/datasource/[selectedDatasource]/index.svelte": [
        "${fromTableName} through ${throughTableName} → ${toTableName}",
        "${fromTableName} through ${throughTableName} → ${toTableName}",
        "Datasource ${name} updated successfully.",
        " ${name} updated successfully.",
        "Error saving datasource: ${err}",
        " ${name} tables updated successfully.",
        "Error updating datasource schema: ${err}",
        "Primary Key: {table.primary}",
        " openRelationshipModal()}\n              >Create relationship"
      ],
      "src/pages/builder/app/[application]/data/datasource/[selectedDatasource]/CreateEditRelationship/CreateEditRelationship.svelte": [
        " ($touched.fromCol = true)}\n    bind:error={errors.fromCol}\n    label=\"From table column\"\n    bind:value={fromRelationship.name}\n  />\n  ",
        " ($touched.fromCol = true)}\n    bind:error={errors.fromCol}\n    label=\"From table column\"\n    bind:value={fromRelationship.name}\n  />\n  ",
        " ($touched.toCol = true)}\n    bind:error={errors.toCol}\n    label=\"To table column\"\n    bind:value={toRelationship.name}\n  />\n  "
      ],
      "src/components/integration/QueryViewer.svelte": [
        "Query Error: ${err.message}",
        "Query Error: ${err.message}",
        "Error creating query. ${err.message}",
        "Query {integrationInfo?.friendlyName}"
      ],
      "src/components/integration/QueryFieldsBuilder.svelte": [
        "Enter {field}",
        "Enter {field}"
      ],
      "src/components/feedback/NPSFeedbackForm.svelte": [
        "NOT LIKELY",
        "How likely are you to recommend {$organisation.company} to a colleague?",
        "{ $t('how-likely-are-you-to-recommend') } {$organisation.company} to a colleague?"
      ],
      "src/components/design/PropertiesPanel/PropertyControls/SectionSelect.svelte": [
        " dispatch(\"change\", selected)}\n    size=\"L\"\n    title=\"Select layout\"\n  >\n    ",
        " dispatch(\"change\", selected)}\n    size=\"L\"\n    title=\"Select layout\"\n  >\n    "
      ],
      "src/components/design/PropertiesPanel/PropertyControls/ResetFieldsButton.svelte": [
        " confirmResetFieldsDialog?.show()}\n  >\n    Update form fields\n  ",
        " confirmResetFieldsDialog?.show()}\n  >\n    Update form fields\n  ",
        "Confirm Form Field Update"
      ],
      "src/components/design/PropertiesPanel/PropertyControls/DataSourceSelect.svelte": [
        " {\n          notifications.success(\"Query parameters saved.\")\n          handleSelected(value)\n          drawer.hide()\n        }}\n      >\n        Save\n      ",
        " {\n          notifications.success(\"Query parameters saved.\")\n          handleSelected(value)\n          drawer.hide()\n        }}\n      >\n        Save\n      ",
        " {\n          notifications.success($t('query-parameters-saved'))\n          handleSelected(value)\n          drawer.hide()\n        }}\n      >\n        Save\n      ",
        "Data Providers"
      ],
      "src/components/design/PropertiesPanel/PropertyControls/ValidationEditor/ValidationDrawer.svelte": [
        "Maximum ${length} characters",
        "Maximum ${length} characters",
        "Minimum value is ${min}",
        "Maximum value is ${max}"
      ],
      "src/components/design/NavigationPanel/ComponentDropdownMenu.svelte": [
        " pasteComponent(\"above\")}\n      disabled={noPaste}\n    >\n      Paste above\n    ",
        " pasteComponent(\"above\")}\n      disabled={noPaste}\n    >\n      Paste above\n    ",
        " pasteComponent(\"below\")}\n      disabled={noPaste}\n    >\n      Paste below\n    ",
        " pasteComponent(\"inside\")}\n      disabled={noPaste || noChildrenAllowed}\n    >\n      Paste inside\n    "
      ],
      "src/components/design/NavigationPanel/ComponentNavigationTree/LayoutDropdownMenu.svelte": [
        "Layout ${layout.name} deleted successfully.",
        "Layout ${layout.name} deleted successfully.",
        " ${layout.name} deleted successfully.",
        "Error deleting layout: ${err.message}",
        "Error saving layout: ${err.message}"
      ],
      "src/components/deploy/VersionModal.svelte": [
        "App updated successfully to version ${clientPackage.version}",
        "App updated successfully to version ${clientPackage.version}",
        "Error updating app: ${err}",
        "App reverted successfully to version ${revertableVersion}",
        "Error reverting app: ${err}",
        ", but version\n        "
      ],
      "src/components/deploy/RevertModal.svelte": [
        "Error reverting changes: ${err}",
        "Error reverting changes: ${err}"
      ],
      "src/components/deploy/DeployModal.svelte": [
        "Error publishing app: ${err}",
        "Error publishing app: ${err}"
      ],
      "src/components/common/Dropzone.svelte": [
        "Files cannot exceed ${\n        fileSizeLimit / BYTES_IN_MB\n      }MB. Please try again with smaller files.",
        "Files cannot exceed ${\n        fileSizeLimit / BYTES_IN_MB\n      }MB. Please try again with smaller files.",
        " ${\n        fileSizeLimit / BYTES_IN_MB\n      }MB. Please try again with smaller files."
      ],
      "src/components/common/ConfigChecklist.svelte": [
        "Create your first user"
      ],
      "src/components/backend/TableNavigator/TableDataImport.svelte": [
        "Files cannot exceed ${\n          FILE_SIZE_LIMIT / BYTES_IN_MB\n        }MB. Please try again with smaller files.",
        "Files cannot exceed ${\n          FILE_SIZE_LIMIT / BYTES_IN_MB\n        }MB. Please try again with smaller files.",
        " ${\n          FILE_SIZE_LIMIT / BYTES_IN_MB\n        }MB. Please try again with smaller files."
      ],
      "src/components/backend/TableNavigator/popovers/EditTablePopover.svelte": [
        "Screen ${screen.props._instanceName}",
        "Screen ${screen.props._instanceName}",
        "Table with name ${tableName} already exists. Please choose another name.",
        " ${tableName} already exists. Please choose another name."
      ],
      "src/components/backend/TableNavigator/modals/CreateTableModal.svelte": [
        "Table with name ${tableName} already exists. Please choose another name.",
        "Table with name ${tableName} already exists. Please choose another name.",
        " ${tableName} already exists. Please choose another name.",
        "Table ${name} created successfully.",
        " ${name} created successfully."
      ],
      "src/components/backend/DataTable/Table.svelte": [
        "Successfully deleted ${selectedRows.length} rows",
        "Successfully deleted ${selectedRows.length} rows"
      ],
      "src/components/backend/DataTable/modals/GroupByModal.svelte": [
        "View ${view.name} saved.",
        "View ${view.name} saved."
      ],
      "src/components/backend/DataTable/modals/FilterModal.svelte": [
        "View ${view.name} saved.",
        "View ${view.name} saved."
      ],
      "src/components/backend/DataTable/modals/CreateViewModal.svelte": [
        "View exists with name ${name}.",
        "View exists with name ${name}.",
        "View ${name} created"
      ],
      "src/components/backend/DataTable/modals/CreateEditColumn.svelte": [
        "Column ${field.name} deleted.",
        "Column ${field.name} deleted.",
        "Many ${thisName} rows → many ${linkName} rows",
        " ${thisName} rows → many ${linkName} rows",
        " → many ${linkName} rows",
        "One ${linkName} "
      ],
      "src/components/backend/DataTable/modals/CalculateModal.svelte": [
        "View ${view.name} saved.",
        "View ${view.name} saved."
      ],
      "src/components/backend/DataTable/buttons/DeleteRowsButton.svelte": [
        "\n  Delete\n  {selectedRows.length}\n  row(s)\n",
        "\n  Delete\n  {selectedRows.length}\n  row(s)\n",
        "\n  { $t('delete') }\n  {selectedRows.length}\n  row(s)\n",
        "\n  Are you sure you want to delete\n  {selectedRows.length}\n  row{selectedRows.length > 1 ? \"s\" : \"\"}?\n",
        "\n  { $t('are-you-sure-you-want-to-delete') }\n  {selectedRows.length}\n  row{selectedRows.length > 1 ? \"s\" : \"\"}?\n"
      ],
      "src/components/backend/DatasourceNavigator/popovers/EditDatasourcePopover.svelte": [
        "Confirm Deletion",
        "Confirm Deletion"
      ],
      "src/components/backend/DatasourceNavigator/modals/UpdateDatasourceModal.svelte": [
        "Datasource with name ${datasourceName} already exists. Please choose another name.",
        "Datasource with name ${datasourceName} already exists. Please choose another name.",
        " ${datasourceName} already exists. Please choose another name.",
        "Datasource ${name} updated successfully.",
        " ${name} updated successfully.",
        "Update Datasource",
        "Datasource Name"
      ],
      "src/components/backend/DatasourceNavigator/modals/CreateDatasourceModal.svelte": [
        "Datasource with name ${datasourceName} already exists. Please choose another name.",
        "Datasource with name ${datasourceName} already exists. Please choose another name.",
        " ${datasourceName} already exists. Please choose another name.",
        "Datasource ${name} created successfully.",
        " ${name} created successfully."
      ],
      "src/components/automation/Shared/CreateWebhookModal.svelte": [
        "\n      Request received! We found\n      {propCount}\n      bindable value{propCount > 1 ? \"s\" : \"\"}.\n    ",
        "\n      Request received! We found\n      {propCount}\n      bindable value{propCount > 1 ? \"s\" : \"\"}.\n    ",
        "\n      { $t('request-received-we-found') }\n      {propCount}\n      bindable value{propCount > 1 ? \"s\" : \"\"}.\n    "
      ],
      "src/components/automation/SetupPanel/SetupPanel.svelte": [
        "Automation ${automation.name} enabled.",
        "Automation ${automation.name} enabled.",
        "Failed to trigger automation ${automation.name}."
      ],
      "src/components/automation/SetupPanel/SchemaSetup.svelte": [
        "Enter field name",
        "Enter field name"
      ],
      "src/components/automation/SetupPanel/QueryParamSelector.svelte": [
        "Query",
        "Query"
      ],
      "src/components/automation/SetupPanel/CronBuilder.svelte": [
        " (presets = !presets)}\n      >{presets ? \"Hide\" : \"Show\"} Presets",
        " (presets = !presets)}\n      >{presets ? \"Hide\" : \"Show\"} Presets"
      ],
      "src/components/automation/AutomationPanel/EditAutomationPopover.svelte": [
        "Confirm Deletion",
        "Confirm Deletion"
      ],
      "src/components/automation/AutomationPanel/CreateAutomationModal.svelte": [
        "Automation ${name} created.",
        "Automation ${name} created."
      ]
    },
    "i18n-ally.extract.ignored": [
      "Budibase",
      "Enter",
      " {\n              admin.unload()\n              $goto(\"./org\")\n            }}\n          >\n            Change organisation\n          "
    ],
    "i18n-ally.translate.google.apiKey": "",
    "i18n-ally.translate.fallbackToKey": true
}
