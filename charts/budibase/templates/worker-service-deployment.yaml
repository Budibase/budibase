apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
{{ if .Values.services.worker.deploymentAnnotations }}
{{- toYaml .Values.services.worker.deploymentAnnotations | indent 4 -}}
{{ end }}
  creationTimestamp: null
  labels:
    io.kompose.service: worker-service
{{ if .Values.services.worker.deploymentLabels }}
{{- toYaml .Values.services.worker.deploymentLabels | indent 4 -}}
{{ end }}
  name: worker-service
spec:
  replicas: {{ .Values.services.worker.replicaCount }}
  selector:
    matchLabels:
      io.kompose.service: worker-service
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.21.0 (992df58d8)
{{ if .Values.services.worker.templateAnnotations }}
{{- toYaml .Values.services.worker.templateAnnotations | indent 8 -}}
{{ end }}
      creationTimestamp: null
      labels:
        io.kompose.service: worker-service
{{ if .Values.services.worker.templateLabels }}
{{- toYaml .Values.services.worker.templateLabels | indent 8 -}}
{{ end }}
    spec:
      containers:
      - env:
        - name: BUDIBASE_ENVIRONMENT
          value: {{ .Values.globals.budibaseEnv }}
        - name: DEPLOYMENT_ENVIRONMENT
          value: "kubernetes"
        - name: CLUSTER_PORT
          value: {{ .Values.services.worker.port | quote }}
        {{ if .Values.services.couchdb.enabled }}
        - name: COUCH_DB_USER
          valueFrom:
            secretKeyRef:
              name: {{ template "couchdb.fullname" . }}
              key: adminUsername
        - name: COUCH_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "couchdb.fullname" . }}
              key: adminPassword
        {{ end }}
        - name: COUCH_DB_URL
          {{ if .Values.services.couchdb.url }}
          value: {{ .Values.services.couchdb.url }}
          {{ else }}
          value: http://{{ .Release.Name }}-svc-couchdb:{{ .Values.services.couchdb.port }}
          {{ end }}
        - name: API_ENCRYPTION_KEY
          value: {{ .Values.globals.apiEncryptionKey | quote }}
        - name: HTTP_LOGGING
          value: {{ .Values.services.worker.httpLogging | quote }}
        - name: INTERNAL_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "budibase.fullname" . }}
              key: internalApiKey
        - name: INTERNAL_API_KEY_FALLBACK
          value: {{ .Values.globals.internalApiKeyFallback | quote }}
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ template "budibase.fullname" . }}
              key: jwtSecret
        - name: JWT_SECRET_FALLBACK
          value: {{ .Values.globals.jwtSecretFallback | quote }}
        {{ if .Values.services.objectStore.region }}
        - name: AWS_REGION
          value: {{ .Values.services.objectStore.region }}
        {{ end }}
        - name: MINIO_ENABLED
          value: {{ .Values.services.objectStore.minio | quote }}
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "budibase.fullname" . }}
              key: objectStoreAccess
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "budibase.fullname" . }}
              key: objectStoreSecret
        - name: MINIO_URL
          value: {{ .Values.services.objectStore.url }}
        - name: CLOUDFRONT_CDN
          value: {{ .Values.services.objectStore.cloudfront.cdn | quote }}
        - name: CLOUDFRONT_PUBLIC_KEY_ID
          value: {{ .Values.services.objectStore.cloudfront.publicKeyId | quote }}
        - name: CLOUDFRONT_PRIVATE_KEY_64
          value: {{ .Values.services.objectStore.cloudfront.privateKey64 | quote }}
        - name: PLUGIN_BUCKET_NAME
          value: {{ .Values.services.objectStore.pluginBucketName | quote }}
        - name: APPS_BUCKET_NAME
          value: {{ .Values.services.objectStore.appsBucketName | quote }}
        - name: GLOBAL_BUCKET_NAME
          value: {{ .Values.services.objectStore.globalBucketName | quote }}
        - name: BACKUPS_BUCKET_NAME
          value: {{ .Values.services.objectStore.backupsBucketName | quote }}
        - name: PORT
          value: {{ .Values.services.worker.port | quote }}
        - name: MULTI_TENANCY
          value: {{ .Values.globals.multiTenancy | quote }}
        - name: LOG_LEVEL
          value: {{ .Values.services.worker.logLevel | quote }}
        - name: REDIS_PASSWORD
          value: {{ .Values.services.redis.password | quote }}
        - name: REDIS_URL
          {{ if .Values.services.redis.url }}
          value: {{ .Values.services.redis.url }}
          {{ else }}
          value: redis-service:{{ .Values.services.redis.port }}
          {{ end }}
        - name: SELF_HOSTED
          value: {{ .Values.globals.selfHosted | quote }}
        - name: SENTRY_DSN
          value: {{ .Values.globals.sentryDSN }}
        - name: ENABLE_ANALYTICS
          value: {{ .Values.globals.enableAnalytics | quote }}
        - name: POSTHOG_TOKEN
          value: {{ .Values.globals.posthogToken }}
        - name: ACCOUNT_PORTAL_URL
          value: {{ .Values.globals.accountPortalUrl | quote }}
        - name: ACCOUNT_PORTAL_API_KEY
          value: {{ .Values.globals.accountPortalApiKey | quote }}
        - name: PLATFORM_URL
          value: {{ .Values.globals.platformUrl | quote }}
        - name: COOKIE_DOMAIN
          value: {{ .Values.globals.cookieDomain | quote }}
        - name: SMTP_FALLBACK_ENABLED
          value: {{ .Values.globals.smtp.enabled | quote }}
        - name: SMTP_USER
          value: {{ .Values.globals.smtp.user | quote }}
        - name: SMTP_PASSWORD
          value: {{ .Values.globals.smtp.password | quote }}
        - name: SMTP_HOST
          value: {{ .Values.globals.smtp.host | quote }}
        - name: SMTP_PORT
          value: {{ .Values.globals.smtp.port | quote }}
        - name: SMTP_FROM_ADDRESS
          value: {{ .Values.globals.smtp.from | quote }}
        - name: APPS_URL
          value: http://app-service:{{ .Values.services.apps.port }}
        - name: GOOGLE_CLIENT_ID
          value: {{ .Values.globals.google.clientId | quote }}
        - name: GOOGLE_CLIENT_SECRET
          value: {{ .Values.globals.google.secret | quote }}
        - name: TENANT_FEATURE_FLAGS
          value: {{ .Values.globals.tenantFeatureFlags | quote }}
        - name: ENCRYPTION_KEY
          value: {{ .Values.globals.bbEncryptionKey | quote }}
        {{ if .Values.globals.datadogApmEnabled }}
        - name: DD_LOGS_INJECTION
          value: {{ .Values.globals.datadogApmEnabled | quote }}
        - name: DD_APM_ENABLED
          value: {{ .Values.globals.datadogApmEnabled | quote }}
        - name: DD_APM_DD_URL
          value: https://trace.agent.datadoghq.eu
        {{ end }}
        {{ if .Values.globals.globalAgentHttpProxy }}
        - name: GLOBAL_AGENT_HTTP_PROXY
          value: {{ .Values.globals.globalAgentHttpProxy | quote }}
        {{ end }}
        {{ if .Values.globals.globalAgentHttpsProxy }}
        - name: GLOBAL_AGENT_HTTPS_PROXY
          value: {{ .Values.globals.globalAgentHttpsProxy | quote }}
        {{ end }}
        {{ if .Values.globals.globalAgentNoProxy }}
        - name: GLOBAL_AGENT_NO_PROXY
          value: {{ .Values.globals.globalAgentNoProxy | quote }}
        {{ end }}
        {{ if .Values.services.tlsRejectUnauthorized }}
        - name: NODE_TLS_REJECT_UNAUTHORIZED
          value: {{ .Values.services.tlsRejectUnauthorized }}
        {{ end }}

        image: budibase/worker:{{ .Values.globals.appVersion }}
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.services.worker.port }}
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.services.worker.port }}
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 3
        name: bbworker
        ports:
        - containerPort: {{ .Values.services.worker.port }}
        {{ with .Values.services.worker.resources }}
        resources:
        {{- toYaml . | nindent 10 }}
        {{ end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      {{ if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName | quote }}
      {{ end }}     
      {{ if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml .Values.imagePullSecrets | nindent 6 }}
      {{ end }}
      restartPolicy: Always
      serviceAccountName: ""
status: {}
